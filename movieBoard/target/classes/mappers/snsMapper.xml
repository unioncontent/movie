<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="org.union.mappers.SNSMapper">
 
 	<sql id="search">
 		<if test="keyword != null">
			<if test="searchType != null">
				<if test="searchType == 't'.toString()">
					and sns_title like concat('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'c'.toString()">
					and sns_content like concat('%', #{keyword}, '%')
				</if>
			</if>
		</if>
		<if test="company != null">
			and
			   keyword in (select 
						keyword 
					from 
						keyword_data
					where
						user_idx = (select 
										user_idx 
									from 
										user_data 
									where 
										user_name = #{company} 
									and 
										keyword_property = '포함'
									)
					)
			
		</if>
		<if test="selectKey != null">
				and keyword in (select keyword from keyword_data where keyword_main = #{selectKey})
			</if>
		<if test="startDate != null and endDate != null">
			and writeDate <![CDATA[>=]]> #{startDate}
			and writeDate <![CDATA[<=]]> #{endDate}
		</if>
		<if test="textType != null">
			and textType = #{textType}
		</if>
	</sql>
	<sql id="search_writeDate">
 		<if test="keyword != null">
			<if test="searchType != null">
				<if test="searchType == 't'.toString()">
					and portal_title like concat('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'c'.toString()">
					and portal_title like concat('%', #{keyword}, '%')
				</if>
			</if>
		</if>
		<if test="company != null">
			and
			   keyword in (select 
						keyword 
					from 
						keyword_data
					where
						user_idx = (select 
										user_idx 
									from 
										user_data 
									where 
										user_name = #{company} 
									and 
										keyword_property = '포함'
									)
					)
		</if>
		<if test="selectKey != null">
				and keyword in (select keyword from keyword_data where keyword_main = #{selectKey})
			</if>	
		<if test="startDate == null">
			and writeDate <![CDATA[>=]]> CURDATE()
		</if>	
		<if test="startDate != null">
			and writeDate <![CDATA[>=]]> #{startDate}
			<if test="endDate != null">
				and writeDate <![CDATA[<]]> #{endDate}
			</if>
		</if>
		<if test="textType != null">
			and textType = #{textType}
		</if>
	</sql>
	<sql id="search_writeDate2">
 		<if test="keyword != null">
			<if test="searchType != null">
				<if test="searchType == 't'.toString()">
					and portal_title like concat('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'c'.toString()">
					and portal_title like concat('%', #{keyword}, '%')
				</if>
			</if>
		</if>
		<if test="company != null">
			and
			   keyword in (select 
						keyword 
					from 
						keyword_data
					where
						user_idx = (select 
										user_idx 
									from 
										user_data 
									where 
										user_name = #{company} 
									and 
										keyword_property = '포함'
									)
					)
		</if>
		<if test="selectKey != null">
				and keyword in (select keyword from keyword_data where keyword_main = #{selectKey})
			</if>	
		<if test="startDate == null">
			and createDate <![CDATA[>=]]> CURDATE()
		</if>	
		<if test="startDate != null">
			and createDate <![CDATA[>=]]> #{startDate}
			<if test="endDate != null">
				and createDate <![CDATA[<]]> #{endDate}
			</if>
		</if>
	</sql>
	
	<sql id="search_writeDate3">
 		<if test="keyword != null">
			<if test="searchType != null">
				and sns_content like concat('%', #{keyword}, '%')
			</if>
		</if>
		<!-- <if test="startDate == null">
			and createDate <![CDATA[>=]]> CURDATE()
		</if> -->	
		<if test="startDate != null">
			and writeDate <![CDATA[>=]]> #{startDate}
			<if test="endDate != null">
				and writeDate <![CDATA[<=]]> #{endDate}
			</if>
		</if>
	</sql>
	
	<sql id="search_writeDate4">
		<!-- <if test="startDate == null">
			and createDate <![CDATA[>=]]> CURDATE()
		</if> -->	
		<if test="startDate != null">
			and createDate <![CDATA[>=]]> #{startDate}
			<if test="endDate != null">
				and createDate <![CDATA[<=]]> #{endDate}
			</if>
		</if>
	</sql>
	
 	<insert id="create">
 		insert into
 			sns_data(sns_name, sns_title, sns_content, sns_writer, like_cnt, reply_cnt, share_cnt, writeDate, keyword, keyword_type, url, textType, thumbnail)
 		values
 			(#{sns_name}, #{sns_title}, #{sns_content}, #{sns_writer}, #{like_cnt}, #{reply_cnt}, #{share_cnt}, #{writeDate}, #{keyword}, #{keyword_type}, #{url}, #{textType}, #{thumbnail})
 	</insert>
 
 	<select id="read" resultType="SNSVO">
 		select
 			*
 		from
 			sns_data
 		where
 			sns_idx = #{sns_idx}
 	
 	</select>
 	
 	<update id="update">
 		update
 			sns_data
 		set
 			sns_name = #{sns_name},
 			sns_title = #{sns_title},
 			sns_content = #{sns_content},
 			sns_writer = #{sns_writer},
 			like_cnt = #{like_cnt},
 			reply_cnt = #{reply_cnt},
 			share_cnt = #{share_cnt},
 			writeDate = #{writeDate},
 			keyword = #{keyword},
 			keyword_type = #{keyword_type},
 			url = #{url},
 			updateDate = now()
 		where
 			sns_idx = #{sns_idx}
 	
 	</update>
 	
 	<delete id="delete">
 		delete from
 			sns_data
 		where
 			sns_idx = #{sns_idx}
 			
 	</delete>
 	
 	<select id="allPageList" resultType="SNSVO">
		select
			*
		from
			sns_data
		where
			url is not null
		<include refid="search"></include>
		order 
			by updateDate desc
		limit  
			#{startPage}, #{perPageNum}
	</select>
	
	<select id="allPageCount" resultType="Integer">
		select
			count(*)
		from
			sns_data
		where
			url is not null
		<include refid="search"></include>
	</select>
 	
 	<select id="countAll" resultType="Integer">
		select count(*)
		from sns_data
		where createDate between date_add(#{date}, interval -1 hour) and #{date}
	
	</select>
	
	<select id="showboxCountAll" resultType="Integer">
		select count(*)
		from sns_data
		where keyword in (select keyword from keyword_data where user_idx = any(select user_idx from user_data where user_name = '쇼박스') )
		and createDate between date_add(#{date}, interval -1 hour) and #{date}
	
	</select>
	
	
 	<select id="yesterdayCount" resultType="GraphVO">
 		select count(if(writeDate <![CDATA[<]]> date_add(now(), interval -1 day), writeDate, null)) type1,
	    count(if(writeDate <![CDATA[>]]> date_add(now(), interval -1 day), writeDate, null)) type2
		from sns_data 
		where writeDate between date_add(now(), interval -2 day) and  date_add(now(), interval -0 day)
		and  sns_name = #{name}
 	</select>
 	
 	<select id="showboxYesterdayCount" resultType="GraphVO">
 		select count(if(writeDate <![CDATA[<]]> date_add(now(), interval -1 day), writeDate, null)) type1,
	    count(if(writeDate <![CDATA[>]]> date_add(now(), interval -1 day), writeDate, null)) type2
		from sns_data 
		where
		keyword in (select keyword from keyword_data where user_idx = any(select user_idx from user_data where user_name = '쇼박스') )
		and writeDate between date_add(now(), interval -2 day) and  date_add(now(), interval -0 day)
		and  sns_name = #{name}
 	</select>
 	
 	<select id="listExtract" resultType="SNSVO">
		select
			*
		from 
			sns_data
		where
			textType is null
		<if test="startDate != null">
		and
			writeDate <![CDATA[>]]> #{startDate}
		<if test="endDate != null">
  		and 
  			writeDate <![CDATA[<]]> #{endDate}
  		</if>
  		</if>
		<include refid="search"></include>
		order by
			createDate desc
		limit
			#{startPage}, #{perPageNum}
			
	
	</select>
	
	<select id="getExtractCount" resultType="Integer">
		select
			count(*)
		from 
			sns_data
		where
			textType is null
		<if test="startDate != null">
		and
			writeDate <![CDATA[>]]> #{startDate}
		<if test="endDate != null">
  		and 
  			writeDate <![CDATA[<]]> #{endDate}
  		</if>
  		</if>
		<include refid="search"></include>
	
	
	</select>
	
	<select id="listSearch" resultType="SNSVO">
		select 
			*
		from 
			sns_data
		where 
			url is not null
		<include refid="search"></include>
		order 
			by updateDate desc
		limit  
			#{startPage}, #{perPageNum}
	
	</select>
	
	<select id = "getSearchCount" resultType="Integer">
		select
			count(*)
		from
			sns_data
		where
			url is not null
		<include refid="search"></include>
			
	</select>
 	
 	<select id="listExcel" resultType="SNSVO">
 		select * from sns_data where sns_idx > 0
 		<include refid="search"></include>
 	</select>
 	
 	<select id="listExcelCount" resultType="Integer">
 		select count(*) from sns_data where sns_idx > 0
 		<include refid="search"></include>
 	</select>
 	
 	<select id="listAll" resultType="SNSVO">
		select 
			*
		from 
			sns_data
		where 
			url is not null
		<include refid="search"></include>
		and sns_name = #{portal_name}
	
	</select>
 	
 	<select id="facebookSum" resultType="GraphVO">
 		select count(*) type1, sum(like_cnt) likeCount, sum(share_cnt) shareCount, sum(reply_cnt) replyCount
		from union.sns_data
		where sns_name = 'facebook'
		<include refid="search"></include>
 	</select>
 	
 	<select id="twitterSum" resultType="GraphVO">
 		select count(*) type1, sum(like_cnt) likeCount, sum(share_cnt) shareCount, sum(reply_cnt) replyCount
		from union.sns_data
		where sns_name = 'twitter'
		<include refid="search"></include>
 	</select>
 	
 	<select id="instagramSum" resultType="GraphVO">
 		select count(*) type1, sum(like_cnt) likeCount, sum(share_cnt) shareCount, sum(reply_cnt) replyCount
		from union.sns_data
		where sns_name = 'instagram'
		<include refid="search"></include>
 	</select>
 	
 	<select id="facebookList" resultType="SNSVO">
 		select 
			*
		from 
			sns_data
		where 
			sns_name = 'facebook'
		<include refid="search"></include>
		order 
			by writeDate desc
		limit  
			#{startPage}, #{perPageNum}
 	</select>
 	
 	<select id="facebookTotalCount" resultType="Integer">
 		select 
 			count(*)
 		from	
 			sns_data
 		where
 			sns_name = 'facebook'
 		
 		<include refid="search"></include>
 		
 	</select>
 	
 	<select id="instaList" resultType="SNSVO">
 		select 
			*
		from 
			sns_data
		where 
			sns_name = 'instagram'
		<include refid="search"></include>
		order 
			by writeDate desc
		limit  
			#{startPage}, #{perPageNum}
 	
 	</select>
 	
 	<select id="instaTotalCount" resultType="Integer">
 		select 
 			count(*)
 		from	
 			sns_data
 		where
 			sns_name = 'instagram'
 		
 		<include refid="search"></include>
 		
 	</select>
 	
 	<select id="twitterList" resultType="SNSVO">
 		select 
			*
		from 
			sns_data
		where 
			sns_name = 'twitter'
		<include refid="search"></include>
		order 
			by writeDate desc
		limit  
			#{startPage}, #{perPageNum}
 	
 	</select>
 	
 	<select id="twitterTotalCount" resultType="Integer">
 		select 
 			count(*)
 		from	
 			sns_data
 		where
 			sns_name = 'twitter'
 		
 		<include refid="search"></include>
 		
 	</select>
 	
 	<select id="getDateCount" resultType="SNSVO">
 		select 
 			date_format(createDate, '%x-%m-%d') writeDate, like_cnt, reply_cnt, share_cnt, sns_name
  		from 
  			sns_data
  		where 
  			sns_name = #{portal_name}
  		<include refid="search"></include>
  		order by  date_format(createDate, '%x-%m-%d') desc
 	
 	</select>
 	
 	<update id="updateTextType">
		update
			sns_data
		set
			textType = #{textType}, 
			updateDate = now()
		where
			sns_idx = #{sns_idx}
	
	</update>

	<update id="updateThumbnail">
		update
			sns_data
		set
			thumbnail = #{thumbnail}
		where
			sns_idx = #{sns_idx}
	
	</update>
	
	<select id="facebookCnt" resultType="SNSVO">
		select
		sum(like_cnt) like_cnt,
		sum(reply_cnt) reply_cnt,
		sum(share_cnt) share_cnt
		from sns_data
        where
        sns_name = 'facebook'
        and sns_title is not null
        <include refid="search_writeDate"></include>
	</select>
	
	<select id="instaCnt" resultType="SNSVO">
		select
		sum(like_cnt) like_cnt,
		sum(reply_cnt) reply_cnt,
		sum(share_cnt) share_cnt
		from sns_data
        where
        sns_name = 'instagram'
        and sns_title is not null
        <include refid="search_writeDate"></include>
	</select>
	
	<select id="twiCnt" resultType="SNSVO">
		select
		sum(like_cnt) like_cnt,
		sum(reply_cnt) reply_cnt,
		sum(share_cnt) share_cnt
		from sns_data
        where
        sns_name = 'twitter'
        and sns_title is not null
        <include refid="search_writeDate"></include>
	</select>
	
	<select id="snsTotalCnt" resultType="SNSVO">
		select
		sum(like_cnt) like_cnt,
		sum(reply_cnt) reply_cnt,
		sum(share_cnt) share_cnt
		from sns_data
        where
        sns_title is not null
        <include refid="search_writeDate"></include>
	</select>
	
	<select id="facebookCGV" resultType="FvVO">
 		select 
		DATE_FORMAT(createDate,'%Y-%m-%d') createDate, view_cnt, like_cnt,share_cnt, reply_cnt
		from facebook_videos
		where url is not null
		<include refid="search_writeDate3"></include>
		group by DATE_FORMAT(createDate,'%Y-%m-%d')
		ORDER BY createDate ASC;
 	</select>
 	
 	<select id="facebookCGVList" resultType="FvVO">
 		select 
		DATE_FORMAT(writeDate,'%Y-%m-%d') writeDate, sns_content, url, max(view_cnt)as view_cnt, max(like_cnt)as like_cnt, max(reply_cnt)as reply_cnt,count(*) as total
		from facebook_videos
        where
			sns_writer = 'CGV'
        <include refid="search_writeDate3"></include>
        group by writeDate
        order by writeDate desc
        limit  
			#{startPage}, #{perPageNum}
 	</select>
 	
 	<select id="facebookCGVListTotalCnt" resultType="Integer">
		select 
		count(*) as total
        from(
        select DATE_FORMAT(writeDate,'%Y-%m-%d') writeDate, sns_content
		from facebook_videos
        where
			sns_writer = 'CGV'
        <include refid="search_writeDate3"></include>
        group by writeDate) as total
	</select>
	
 	<select id="fvlistSearch" resultType="FvVO">
 		select 
 			DATE_FORMAT(createDate,'%Y-%m-%d') createDate, sns_content, url, max(view_cnt)as view_cnt, max(like_cnt)as like_cnt, max(reply_cnt)as reply_cnt,count(*) as total 
 		from 
 			facebook_videos 
 		where 
 			url = #{url}
 		<include refid="search_writeDate4"></include>	
		group 
			by DATE_FORMAT(createDate,'%Y-%m-%d')
		order 
			by createDate desc
 	</select>
 	
 	<select id="fvlistSearchTotalCnt" resultType="Integer">
 		select 
			count(*) as total
        from(
 		select 
 			DATE_FORMAT(createDate,'%Y-%m-%d') createDate, sns_content, url, max(view_cnt)as view_cnt, max(like_cnt)as like_cnt, max(reply_cnt)as reply_cnt,count(*) as total 
 		from 
 			facebook_videos 
 		where 
 			url = #{url}
 		<include refid="search_writeDate4"></include>
 		group by DATE_FORMAT(createDate,'%Y-%m-%d')
		order 
			by createDate desc) as total;
 	</select>
 	
 	<select id="fvlistSearchList" resultType="FvVO">
 		select 
 			* 
 		from 
 			facebook_videos 
 		where 
 			url = #{url}
 		and 
 			createDate <![CDATA[>=]]> #{createstartDate}
		and 
			createDate <![CDATA[<=]]> #{createendDate}	
		order 
			by createDate desc
 	</select>
 	
 	<select id="fvlistSearchListTotalCnt" resultType="Integer">
 		select 
 			count(*) 
 		from 
 			facebook_videos 
 		where 
 			url = #{url}
 		and 
 			createDate <![CDATA[>=]]> #{createstartDate}
		and 
			createDate <![CDATA[<=]]> #{createendDate}
 		order 
			by createDate desc
 	</select>
 	
 	<select id="fvlistSearchEx" resultType="FvVO">
 		select 
 			* 
 		from 
 			facebook_videos 
 		where 
 			url = #{url}
 		<include refid="search_writeDate4"></include>	
		order 
			by createDate desc
 	</select>
 	
 	<select id="fvlistViewCnt" resultType="Integer">
 		select 
 			view_cnt
 		from 
 			facebook_videos
 		where 
 			createDate between date_add(#{date}, interval -1 hour) and #{date}
 		and
 			url = #{url}
 		order by 
 			createDate desc 
 		limit 1;
 	</select>
 	
 	<select id="fvlistReply_cnt" resultType="Integer">
 		select 
 			reply_cnt
 		from 
 			facebook_videos
 		where 
 			createDate between date_add(#{date}, interval -1 hour) and #{date}
 		and
 			url = #{url}
 		order by 
 			createDate desc 
 		limit 1;
 	</select>
 	
 	<select id="fvlistlike_cnt" resultType="Integer">
 		select 
 			like_cnt
 		from 
 			facebook_videos
 		where 
 			createDate between date_add(#{date}, interval -1 hour) and #{date}
 		and
 			url = #{url}
 		order by 
 			createDate desc 
 		limit 1;
 	</select>
 	
 	<select id="fvlistMinus" resultType="FvVO">
 		select 
 			view_cnt
		from 
			facebook_videos 
		where 
			view_cnt != (select view_cnt from facebook_videos where url =#{url} and 
 			createDate <![CDATA[>=]]> #{createstartDate}
		and 
			createDate <![CDATA[<=]]> #{createendDate} order by createDate desc limit 1) 
		and 
			url = #{url}
		and 
 			createDate <![CDATA[>=]]> #{createstartDate}
		and 
			createDate <![CDATA[<=]]> #{createendDate}
		order 
			by createDate desc
 	</select>
	<select id="fvlistSearchTime" resultType="FvVO">
 		select 
 			*
 		from 
 			facebook_videos
 		where
 			url = #{url}
 		order by createDate asc 
 		limit 1
 	</select>
 	<select id="fvSearchlistSearchTime" resultType="FvVO">
 		select 
 			*
 		from 
 			facebook_videos
 		where
 			url = #{url}
 		and 
 			createDate <![CDATA[>=]]> #{createstartDate}
		and 
			createDate <![CDATA[<=]]> #{createendDate}
 		order by createDate asc 
 		limit 1
 	</select>
 </mapper>