<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="org.union.mappers.MediaMapper">
 
 
 	<sql id="periodSearch">
		<if test="company != null">
			and
			   keyword in (select 
						keyword 
					from 
						keyword_data
					where
						user_idx = (select 
										user_idx 
									from 
										user_data 
									where 
										user_name = #{company} 
									and 
										keyword_property = '포함'
									)
					)
		</if>
		<if test="selectKey != null">
				and keyword in (select keyword from keyword_data where keyword_main = #{selectKey})
			</if>
		<if test="startDate != null">
			and createDate <![CDATA[>]]> #{startDate}
			<if test="endDate != null">
				and createDate <![CDATA[<]]> #{endDate}
			</if>
		</if>
 	</sql>
 	<sql id="search">
 		<if test="keyword != null">
			<if test="searchType != null">
				<if test="searchType == 't'.toString()">
					and media_title like concat('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'c'.toString()">
					and media_content like concat('%', #{keyword}, '%')
				</if>
			</if>
		</if>
		<if test="company != null">
			and
			   keyword in (select 
						keyword 
					from 
						keyword_data
					where
						user_idx = (select 
										user_idx 
									from 
										user_data 
									where 
										user_name = #{company} 
									and 
										keyword_property = '포함'
									)
					)
		</if>
		<if test="selectKey != null">
				and keyword in (select keyword from keyword_data where keyword_main = #{selectKey})
			</if>
		<if test="startDate != null">
			and createDate <![CDATA[>]]> #{startDate}
			<if test="endDate != null">
				and createDate <![CDATA[<]]> #{endDate}
			</if>
		</if>
		<if test="textType != null">
			and textType = #{textType}
		</if>
	</sql>
 
 	<insert id="create">
 		insert into
 			media_data(media_name, media_title, media_content, reporter_name, reporter_ID, writeDate, last_writeDate, last_media_title, last_media_content, keyword, keyword_type, url)
 		values
 			(#{media_name}, #{media_title}, #{media_content}, #{reporter_name}, #{reporter_ID}, #{writeDate}, #{last_writeDate}, #{last_media_title},
 			 #{last_media_content}, #{keyword}, #{keyword_type}, #{url})
 	
 	</insert>
 
 	<select id="read" resultType="MediaVO">
 		select
 			*
 		from
 			media_data
 		where
 			media_idx = #{media_idx}
 	
 	</select>
 
 	<update id="update">
 		update 
 			media_data
 		set
 			media_name = #{media_name},
 			media_title = #{media_title},
 			media_content = #{media_content},
 			reporter_name = #{reporter_name},
 			writeDate = #{writeDate},
 			last_writeDate = #{last_writeDate},
 			last_media_title = #{last_media_title},
 			last_media_content = #{last_media_content},
 			keyword = #{keyword},
 			keyword_type = #{keyword_type},
 			url = #{url},
 			updateDate = now()
 		where
 			media_idx = #{media_idx}
 		
 	</update>
 
 	<delete id="delete">
 		delete from
 			media_data
 		where
 			media_idx = #{media_idx}
 	
 	</delete>
 	
 	<select id="allPageList" resultType="MediaVO">
		select
			*
		from
			media_data
		where
			url is not null
		<include refid="search"></include>
		order 
			by updateDate desc
		limit  
			#{startPage}, #{perPageNum}
	</select>
	
	<select id="allPageCount" resultType="Integer">
		select
			count(*)
		from
			media_data
		where
			url is not null
		<include refid="search"></include>
	</select>
 	
 	<select id="yesterdayCount" resultType="GraphVO">
 		select count(if(createDate <![CDATA[<]]> date_add(now(), interval -1 day), createDate, null)) type1,
	    count(if(createDate <![CDATA[>]]> date_add(now(), interval -1 day), createDate, null)) type2
		from media_data 
		where createDate between date_add(now(), interval -2 day) and  date_add(now(), interval -0 day)
 	</select>
 	
 	<select id="naverMediaCount" resultType="TextTypeVO">
 		select 
 		count(if(textType='좋은글', textType, null)) lik,
		count(if(textType='나쁜글', textType, null)) dis,
		count(if(textType='관심글', textType, null)) cu,
		count(if(textType='기타글', textType, null)) etc,
		count(if(textType is not null and texttype!='삭제글', textType, null)) al
 		from media_data where keyword='press' and media_name = 'naver'
 		<include refid="search"></include>
 	</select>
 	
 	<select id="daumMediaCount" resultType="TextTypeVO">
 		select  
 		count(if(textType='좋은글', textType, null)) lik,
		count(if(textType='나쁜글', textType, null)) dis,
		count(if(textType='관심글', textType, null)) cu,
		count(if(textType='기타글', textType, null)) etc,
		count(if(textType is not null and texttype!='삭제글', textType, null)) al
 		from media_data where keyword='press' and media_name = 'daum'
 		<include refid="search"></include>
 	</select>
 
 	<select id="searchAll" resultType="MediaVO">
 		select
 			*
 		from
 			media_data
 			
 	
 	</select>
 	
 	
 	<select id="listExtract" resultType="MediaVO">
		select
			*
		from 
			media_data
		where
			textType is null
		<if test="startDate != null">
		and
			writeDate <![CDATA[>]]> #{startDate}
		<if test="endDate != null">
  		and 
  			writeDate <![CDATA[<]]> #{endDate}
  		</if>
  		</if>
		<include refid="search"></include>
		order by
			createDate desc
		limit
			#{startPage}, #{perPageNum}
			
	
	</select>
 	
 	<select id="getExtractCount" resultType="Integer">
		select
			count(*)
		from 
			media_data
		where
			textType is null
		<if test="startDate != null">
		and
			writeDate <![CDATA[>]]> #{startDate}
		<if test="endDate != null">
  		and 
  			writeDate <![CDATA[<]]> #{endDate}
  		</if>
  		</if>
		<include refid="search"></include>
	
	
	</select>
 	
 
 	<select id="listSearch" resultType="MediaVO">
 		select 
			*
		from 
			media_data
		where 
			textType is not null
		<include refid="search"></include>
		order 
			by updateDate desc
		limit  
			#{startPage}, #{perPageNum}
 	
 	</select>
 	
 	<select id = "getSearchCount" resultType="Integer">
		select
			count(*)
		from
			media_data
		where
			textType is not null
		<include refid="search"></include>
			
	</select>
 	
 	<select id="getTotalCount" resultType="Integer">
 		select
 			count(*)
 		from
 			media_data
 	
 	</select>
 	
 	<select id="listAll" resultType="MediaVO">
 		select 
			*
		from 
			media_data
		where 
			textType is not null
		<include refid="search"></include>
 	
 	</select>
 	
 	<select id="mediaGetTotalCount" resultType="Integer">
 		select 
 			count(*) 
 		from 
 			media_data
 		where
 			media_name = #{keyword}
 	
 	</select>
 	
 	<select id="reporterGetTotalCount" resultType="Integer">
 		select 
 			count(*) 
 		from 
 			media_data
 		where
 			reporter_name = #{keyword}
 	
 	</select>
 	
 	<select id="mediaGetSearchCount" resultType="Integer">
 		select 
 			count(*) 
 		from 
 			media_data
 		where
 			media_name = #{keyword}
 		<include refid="periodSearch"></include>
 		
 	</select>
 	
 	<select id="reporterGetSearchCount" resultType="Integer">
 		select
 			count(*)
 		from
 			media_data
 		where
 			reporter_name = #{keyword}
 	    <include refid="periodSearch"></include>
 	</select>
 	
 	
 	<update id="updateTextType">
		update
			media_data
		set
			textType = #{textType}, 
			updateDate = now()
		where
			media_idx = #{media_idx}
	
	</update>

	<update id="updateThumbnail">
		update
			media_data
		set
			thumbnail = #{thumbnail}
		where
			media_idx = #{media_idx}
	
	</update>
 	
 
 </mapper>