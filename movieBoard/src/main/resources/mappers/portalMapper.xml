<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="org.union.mappers.PortalMapper">
 
 	<sql id="search">
 		<if test="keyword != null">
			<if test="searchType != null">
				<if test="searchType == 't'.toString()">
					and portal_title like concat('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'c'.toString()">
					and portal_title like concat('%', #{keyword}, '%')
				</if>
			</if>
		</if>
		<if test="company != null">
			and
			   keyword in (select 
						keyword 
					from 
						keyword_data
					where
						user_idx = (select 
										user_idx 
									from 
										user_data 
									where 
										user_name = #{company} 
									and 
										keyword_property = '포함'
									)
					)
		</if>
		<if test="selectKey != null">
				and keyword in (select keyword from keyword_data where keyword_main = #{selectKey})
			</if>
		<if test="startDate != null">
			and updateDate <![CDATA[>=]]> #{startDate}
			<if test="endDate != null">
				and updateDate <![CDATA[<]]> #{endDate}
			</if>
		</if>
		<if test="textType != null">
			and textType = #{textType}
		</if>
	</sql>
 
 	<sql id="search_writeDate">
 		<if test="keyword != null">
			<if test="searchType != null">
				<if test="searchType == 't'.toString()">
					and portal_title like concat('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'c'.toString()">
					and portal_title like concat('%', #{keyword}, '%')
				</if>
			</if>
		</if>
		<if test="company != null">
			and
			   keyword in (select 
						keyword 
					from 
						keyword_data
					where
						user_idx = (select 
										user_idx 
									from 
										user_data 
									where 
										user_name = #{company} 
									and 
										keyword_property = '포함'
									)
					)
		</if>
		<if test="selectKey != null">
				and keyword in (select keyword from keyword_data where keyword_main = #{selectKey})
			</if>	
		<if test="startDate == null">
			and writeDate <![CDATA[>=]]> CURDATE()
		</if>	
		<if test="startDate != null">
			and writeDate <![CDATA[>=]]> #{startDate}
			<if test="endDate != null">
				and writeDate <![CDATA[<]]> #{endDate}
			</if>
		</if>
		<if test="textType != null">
			and textType = #{textType}
		</if>
	</sql>
	
	<sql id="search_writeDate2">
		<if test="company != null">
			where
			   keyword in (select 
						keyword 
					from 
						keyword_data
					where
						user_idx = (select 
										user_idx 
									from 
										user_data 
									where 
										user_name = #{company} 
									and 
										keyword_property = '포함'
									)
					)
		</if>
		<if test="selectKey != null">
				and keyword in (select keyword from keyword_data where keyword_main = #{selectKey})
			</if>
		<if test="startDate != null">
			and writeDate <![CDATA[>=]]> #{startDate}
			<if test="endDate != null">
				and writeDate <![CDATA[<=]]> #{endDate}
			</if>
		</if>
		<if test="textType != null">
			and textType = #{textType}
		</if>
	</sql>
 
 	<insert id="create">
 		insert into
 			portal_data(portal_type, portal_name, writer, portal_title, portal_content, deviceType, writeDate, keyword, keyword_type, url, textType, thumbnail)
 		values
 			(#{portal_type}, #{portal_name}, #{writer}, #{portal_title}, #{portal_content}, #{deviceType}, #{writeDate}, #{keyword},
 			 #{keyword_type}, #{url}, #{textType}, #{thumbnail})
 	
 	</insert>
 
 	<select id="read" resultType="PortalVO">
 		select
 			*
 		from
 			portal_data
 		where
 			portal_idx = #{portal_idx}
 	
 	</select>
 
 	<update id="update">
 		update
 			portal_data
 		set
 			portal_type = #{portal_type},
 			portal_name = #{portal_name},
 			portal_title = #{portal_title},
 			deviceType = #{deviceType},
 			writeDate = #{writeDate},
 			keyword = #{keyword},
 			keyword_type = #{keyword_type},
 			url = #{url},
 			updateDate = now()
 		where
 			portal_idx = #{portal_idx}
 			
 	</update>
 
 	<delete id="delete">
 		delete from
 			portal_data
 		where
 			portal_idx = #{portal_idx}
 	
 	</delete>
 	
 	<select id="getTypeOfMovieCount" resultType="Integer">
 		select
 			count(*)
 		from
 			portal_data
 		where
 			portal_name = 'naver'
 		and
 			keyword_type = '영화'
 	<include refid="search_writeDate"></include>
 	
 	</select>
 	
 	<select id="getTypeOfActorCount" resultType="Integer">
 		select
 			count(*)
 		from
 			portal_data
 		where
 			portal_name = 'naver'
 		and
 			keyword_type = '배우'
 	<include refid="search_writeDate"></include>
 	
 	</select>
 	
 	<select id="allPageList" resultType="PortalVO">
		select
			*
		from
			portal_data
		where
			url is not null
		<include refid="search"></include>
		order 
			by updateDate desc
		limit  
			#{startPage}, #{perPageNum}
	</select>
	
 	<select id="TotalAllPageList" resultType="PortalVO">
		select
			*
		from
			portal_data_history
		where
			url is not null
		<include refid="search"></include>
		order 
			by updateDate desc
		limit  
			#{startPage}, #{perPageNum}
	</select>
	
	<select id="allPage" resultType="PortalVO">
		select
			*
		from
			portal_data
		where
			url is not null
		<include refid="search"></include>
		order 
			by updateDate desc
	</select>
	
	<select id="allPageCount" resultType="Integer">
		select
			count(*)
		from
			portal_data
		where
			url is not null
		<include refid="search"></include>
	</select>
	
	<select id="TotalAllPageCount" resultType="Integer">
		select
			count(*)
		from
			portal_data_history
		where
			url is not null
		<include refid="search"></include>
	</select>
 	
 	<select id="countAll" resultType="Integer">
		select count(*)
		from portal_data
		where 
		createDate between date_add(#{date}, interval -1 hour) and #{date}
	
	</select>
	
	<select id="showboxCountAll" resultType="Integer">
		select count(*)
		from portal_data
		where 
		keyword in (select keyword from keyword_data where user_idx = (select user_idx from user_data where user_name = '쇼박스') )
		and createDate between date_add(#{date}, interval -1 hour) and #{date}
	
	</select>
	
 	<select id="toDayCount" resultType="GraphVO">
 		select count(if(portal_name = 'naver', portal_name, null)) type1,
 			 count(if(portal_name = 'daum', portal_name, null)) type2, count(*) type3  
 		from portal_data
		where portal_type = #{type}
		and date_add(now(), interval -1 day) <![CDATA[<]]> writeDate
		and writeDate <![CDATA[<]]> now()
 	</select>
 	
 	<select id="showboxToDayCount" resultType="GraphVO">
 		select count(if(portal_name = 'naver', portal_name, null)) type1,
 			 count(if(portal_name = 'daum', portal_name, null)) type2, count(*) type3  
 		from portal_data
		where portal_type = #{type}
		and keyword in (select keyword from keyword_data where user_idx = (select user_idx from user_data where user_name = '쇼박스') )
		and date_add(now(), interval -1 day) <![CDATA[<]]> writeDate
		and writeDate <![CDATA[<]]> now()
 	</select>
 	
 	<select id="yesterdayCount" resultType="GraphVO">
 		select count(if(writeDate <![CDATA[<]]> date_add(now(), interval -1 day), writeDate, null)) type1,
	    count(if(writeDate <![CDATA[>]]> date_add(now(), interval -1 day), writeDate, null)) type2
		from portal_data 
		where writeDate between date_add(now(), interval -2 day) and  date_add(now(), interval -0 day)
 	</select>
 	
 	<select id="showboxYesterdayCount" resultType="GraphVO">
 		select count(if(writeDate <![CDATA[<]]> date_add(now(), interval -1 day), writeDate, null)) type1,
	    count(if(writeDate <![CDATA[>]]> date_add(now(), interval -1 day), writeDate, null)) type2
		from portal_data 
		where 
		keyword in (select keyword from keyword_data where user_idx = (select user_idx from user_data where user_name = '쇼박스') )
		and writeDate between date_add(now(), interval -2 day) and  date_add(now(), interval -0 day)
 	</select>
 	
 	<select id="listNaver" resultType="PortalVO">
 		select * from portal_data 
 		where 
 			textType is not null
 		and
 			portal_name = 'naver'
 		<include refid="search"></include>
		order 
			by createdate desc
		limit  
			#{startPage}, #{perPageNum}
 	
 	</select>
 	
 	<select id="getNaverCount" resultType="Integer">
 		select count(*) from portal_data
 		where 
 			textType is not null
 		and score is null 
 		and
 			portal_name = 'naver'
 		<include refid="search_writeDate"></include>
 	
 	</select>
 	
 	<select id="textTypeCount" resultType="TextTypeVO">
 		select 
		count(if(textType='좋은글', textType, null)) lik,
		count(if(textType='나쁜글', textType, null)) dis,
		count(if(textType='관심글', textType, null)) cu,
		count(if(textType='기타글', textType, null)) etc,
		count(if(textType is not null and texttype!='삭제글', textType, null)) al
		from portal_data
		where textType is not null
		and score is null
		<include refid="search_writeDate"></include>
 	</select>
 	
 	<select id="textTypeCount2" resultType="TextTypeDateVO">
 		select 
		DATE_FORMAT(writeDate,'%Y-%m-%d') writeDate,
		count(if(textType='좋은글', textType, null)) lik,
		count(if(textType='나쁜글', textType, null)) dis,
		count(if(textType='관심글', textType, null)) cu,
		count(if(textType='기타글', textType, null)) etc,
		count(if(textType is not null and texttype!='삭제글', textType, null)) al
		from portal_data
		where textType is not null
		<include refid="search_writeDate"></include>
		group by DATE_FORMAT(writeDate,'%Y-%m-%d')
		ORDER BY writeDate ASC;
 	</select>
 	
 	
 	<select id="blogTextTypeCount" resultType="TextTypeVO">
 	select 
		count(if(textType='좋은글', textType, null)) lik,
    	count(if(textType='나쁜글', textType, null)) dis,
    	count(if(textType='관심글', textType, null)) cu,
    	count(if(textType='기타글', textType, null)) etc,
    	count(if(textType is not null and texttype!='삭제글', textType, null))
	from 
		union.portal_data
	where 
		portal_type = 'blog'
 	<include refid="search_writeDate"></include>
 	</select>
 	
 	<select id="cafeTextTypeCount" resultType="TextTypeVO">
 	select 
		count(if(textType='좋은글', textType, null)) lik,
    	count(if(textType='나쁜글', textType, null)) dis,
    	count(if(textType='관심글', textType, null)) cu,
    	count(if(textType='기타글', textType, null)) etc,
    	count(if(textType is not null and texttype!='삭제글', textType, null))
	from 
		union.portal_data
	where 
		portal_type = 'cafe'
	<include refid="search_writeDate"></include>
 	
 	</select>
 	
 	<select id="naverTextTypeCountb" resultType="TextTypeVO">
 	select 
		count(if(textType='좋은글', textType, null)) lik,
    	count(if(textType='나쁜글', textType, null)) dis,
    	count(if(textType='관심글', textType, null)) cu,
    	count(if(textType='기타글', textType, null)) etc,
    	count(if(textType is not null and texttype!='삭제글', textType, null))
	from 
		union.portal_data
	where 
		portal_name = 'naver'
	and 
		portal_type = 'blog'	
		<include refid="search_writeDate"></include>
 	</select>
 	<select id="naverTextTypeCountc" resultType="TextTypeVO">
 	select 
		count(if(textType='좋은글', textType, null)) lik,
    	count(if(textType='나쁜글', textType, null)) dis,
    	count(if(textType='관심글', textType, null)) cu,
    	count(if(textType='기타글', textType, null)) etc,
    	count(if(textType is not null and texttype!='삭제글', textType, null))
	from 
		union.portal_data
	where 
		portal_name = 'naver'
	and 
		portal_type = 'cafe'	
		<include refid="search_writeDate"></include>
 	</select>
 	<select id="naverTextTypeCountk" resultType="TextTypeVO">
 	select 
		count(if(textType='좋은글', textType, null)) lik,
    	count(if(textType='나쁜글', textType, null)) dis,
    	count(if(textType='관심글', textType, null)) cu,
    	count(if(textType='기타글', textType, null)) etc,
    	count(if(textType is not null and texttype!='삭제글', textType, null))
	from 
		union.portal_data
	where 
		portal_name = 'naver'
	and 
		portal_type = 'kintip'
		<include refid="search_writeDate"></include>
 	</select>
 	<select id="naverTextTypeCountw" resultType="TextTypeVO">
 	select 
		count(if(textType='좋은글', textType, null)) lik,
    	count(if(textType='나쁜글', textType, null)) dis,
    	count(if(textType='관심글', textType, null)) cu,
    	count(if(textType='기타글', textType, null)) etc,
    	count(if(textType is not null and texttype!='삭제글', textType, null))
	from 
		union.portal_data
	where 
		portal_name = 'naver'
	and 
		portal_type = 'webdoc'	
		<include refid="search_writeDate"></include>
 	</select>
 	
 	
 	<select id="daumTextTypeCountb" resultType="TextTypeVO">
 	select 
		count(if(textType='좋은글', textType, null)) lik,
    	count(if(textType='나쁜글', textType, null)) dis,
    	count(if(textType='관심글', textType, null)) cu,
    	count(if(textType='기타글', textType, null)) etc,
    	count(if(textType is not null and texttype!='삭제글', textType, null))
	from 
		union.portal_data
	where 
		portal_name = 'daum'
	and 
		portal_type = 'blog'
		<include refid="search_writeDate"></include>
 	</select>
 	<select id="daumTextTypeCountc" resultType="TextTypeVO">
 	select 
		count(if(textType='좋은글', textType, null)) lik,
    	count(if(textType='나쁜글', textType, null)) dis,
    	count(if(textType='관심글', textType, null)) cu,
    	count(if(textType='기타글', textType, null)) etc,
    	count(if(textType is not null and texttype!='삭제글', textType, null))
	from 
		union.portal_data
	where 
		portal_name = 'daum'
	and 
		portal_type = 'cafe'
		<include refid="search_writeDate"></include>
 	</select>
 	<select id="daumTextTypeCountk" resultType="TextTypeVO">
 	select 
		count(if(textType='좋은글', textType, null)) lik,
    	count(if(textType='나쁜글', textType, null)) dis,
    	count(if(textType='관심글', textType, null)) cu,
    	count(if(textType='기타글', textType, null)) etc,
    	count(if(textType is not null and texttype!='삭제글', textType, null))
	from 
		union.portal_data
	where 
		portal_name = 'daum'
	and 
		portal_type = 'kintip'
		<include refid="search_writeDate"></include>
 	</select>
 	<select id="daumTextTypeCountw" resultType="TextTypeVO">
 	select 
		count(if(textType='좋은글', textType, null)) lik,
    	count(if(textType='나쁜글', textType, null)) dis,
    	count(if(textType='관심글', textType, null)) cu,
    	count(if(textType='기타글', textType, null)) etc,
    	count(if(textType is not null and texttype!='삭제글', textType, null))
	from 
		union.portal_data
	where 
		portal_name = 'daum'
	and 
		portal_type = 'webdoc'
		<include refid="search_writeDate"></include>
 	</select>
 	
 	<select id="listDaum" resultType="PortalVO">
 		select * from portal_data 
 		where 
 			textType is not null
 		and
 			portal_name = 'daum'
 		<include refid="search"></include>
		order 
			by createdate desc
		limit  
			#{startPage}, #{perPageNum}
 	
 	</select>
 	
 	<select id="getDaumCount" resultType="Integer">
 		select count(*) from portal_data
 		where 
 			textType is not null
 		and score is null 
 		and
 			portal_name = 'daum'
 		<include refid="search_writeDate"></include>
 	
 	</select>
 	
 	<select id="listExtract" resultType="PortalVO">
		select
			*
		from 
			portal_data
		where
			textType is null
		<include refid="search"></include>
		order by
			createDate desc
		limit
			#{startPage}, #{perPageNum}
	
	</select>
 
 	<select id="getExtractCount" resultType="Integer">
		select
			count(*)
		from 
			portal_data
		where
			textType is null
		<include refid="search"></include>
	
	
	</select>
 
 	<select id="listSearch" resultType="PortalVO">
 		select 
			*
		from 
			portal_data
		where 
			textType is not null
		and
			score is null
		<include refid="search"></include>
		order 
			by updateDate desc
		limit  
			#{startPage}, #{perPageNum}
 	
 	</select>
 	
 	<select id="wlistSearch" resultType="PortalVO">
 		select 
			*
		from 
			portal_data
		where 
			textType is not null
		and
			score is null
		and 
			textType!='삭제글'	
		<include refid="search_writeDate"></include>
		order 
			by updateDate desc
		limit  
			#{startPage}, #{perPageNum}
 	
 	</select>
 	
 	<select id="getScoreList" resultType="PortalVO">
 		select 
			*
		from 
			portal_data
		where 
			portal_type = 'score'
		<include refid="search_writeDate"></include>
		order 
			by updateDate desc
		limit  
			#{startPage}, #{perPageNum}
 	
 	</select>

	<select id="getScoreCount" resultType="Integer">
 		select 
			count(*)
		from 
			portal_data
		where 
			portal_type = 'score'
		<include refid="search_writeDate"></include>
 	</select> 	
 	
 	<select id="getScoreTextType" resultType="TextTypeVO">
 		select  
 		count(if(textType='좋은글', textType, null)) lik,
		count(if(textType='나쁜글', textType, null)) dis,
		count(if(textType='관심글', textType, null)) cu,
		count(if(textType='악성글', textType, null)) etc,
		count(if(textType is not null and texttype!='삭제글', textType, null)) al
 		from portal_data where portal_type = 'score'
 		<include refid="search_writeDate"></include>
 	</select>
 	
 	<select id="getOnlyScore" resultType="Integer">
 		select
 			score
 		from
 			portal_data
 		where score is not null
 		<include refid="search_writeDate"></include>
 		
 	</select>
 	
 	<select id="listAll" resultType="PortalVO">
 		select 
			*
		from 
			portal_data
		where 
			textType is not null
		and score is null
		<include refid="search"></include>
 	
 	</select>
 	
 	<update id="updateTextType">
		update
			portal_data
		set
			textType = #{textType},
			updateDate = now()
		where
			portal_idx = #{portal_idx}
	
	</update>
	
	<select id = "getSearchCount" resultType="Integer">
		select
			count(*)
		from
			portal_data
		where
			textType is not null
		and
			score is null
		<include refid="search"></include>
			
	</select>
	
	<select id = "wgetSearchCount" resultType="Integer">
		select
			count(*)
		from
			portal_data
		where
			textType is not null
		and
			score is null
		<include refid="search_writeDate"></include>
			
	</select>
	
	<select id="wPageSearch" resultType="PortalVO">
		select 
			*
		from 
			portal_data
		where 
			textType is not null
		and
			score is null
		<include refid="search_writeDate"></include>
		order 
			by writeDate desc
	</select>

	<update id="updateThumbnail">
		update
			portal_data
		set
			thumbnail = #{thumbnail}
		where
			portal_idx = #{portal_idx}
	
	</update>
 
 </mapper>