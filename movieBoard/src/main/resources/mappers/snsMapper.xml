<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
 <mapper namespace="org.union.mappers.SNSMapper">
 
 
 	<sql id="search">
 		<if test="keyword != null">
			<if test="searchType != null">
				<if test="searchType == 't'.toString()">
					and sns_title like concat('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'c'.toString()">
					and sns_content like concat('%', #{keyword}, '%')
				</if>
			</if>
		</if>
		<if test="selectKey != null">
			and keyword = #{selectKey}
		</if>
	</sql>
 
 
 	<insert id="create">
 		insert into
 			sns_data(sns_name, sns_title, sns_content, sns_writer, like_cnt, reply_cnt, share_cnt, writeDate, keyword, keyword_type, url, textType)
 		values
 			(#{sns_name}, #{sns_title}, #{sns_content}, #{sns_writer}, #{like_cnt}, #{reply_cnt}, #{share_cnt}, #{writeDate}, #{keyword}, #{keyword_type}, #{url}, #{textType})
 	</insert>
 
 	<select id="read" resultType="SNSVO">
 		select
 			*
 		from
 			sns_data
 		where
 			sns_idx = #{sns_idx}
 	
 	</select>
 	
 	<update id="update">
 		update
 			sns_data
 		set
 			sns_name = #{sns_name},
 			sns_title = #{sns_title},
 			sns_content = #{sns_content},
 			sns_writer = #{sns_writer},
 			like_cnt = #{like_cnt},
 			reply_cnt = #{reply_cnt},
 			share_cnt = #{share_cnt},
 			writeDate = #{writeDate},
 			keyword = #{keyword},
 			keyword_type = #{keyword_type},
 			url = #{url},
 			updateDate = now()
 		where
 			sns_idx = #{sns_idx}
 	
 	</update>
 	
 	<delete id="delete">
 		delete from
 			sns_data
 		where
 			sns_idx = #{sns_idx}
 			
 	</delete>
 	
 	<select id="listExtract" resultType="SNSVO">
		select
			*
		from 
			sns_data
		where
			textType is null
		<if test="startDate != null">
		and
			writeDate <![CDATA[>]]> #{startDate}
		<if test="endDate != null">
  		and 
  			writeDate <![CDATA[<]]> #{endDate}
  		</if>
  		</if>
		<include refid="search"></include>
		order by
			createDate desc
		limit
			#{startPage}, #{perPageNum}
			
	
	</select>
	
	<select id="getExtractCount" resultType="Integer">
		select
			count(*)
		from 
			sns_data
		where
			textType is null
		<if test="startDate != null">
		and
			writeDate <![CDATA[>]]> #{startDate}
		<if test="endDate != null">
  		and 
  			writeDate <![CDATA[<]]> #{endDate}
  		</if>
  		</if>
		<include refid="search"></include>
	
	
	</select>
 	
 	
 	<select id="facebookList" resultType="SNSVO">
 		select 
			*
		from 
			sns_data
		where 
			textType is not null
		and
			sns_name = 'facebook'
		<include refid="search"></include>
		order 
			by createdate desc
		limit  
			#{startPage}, #{perPageNum}
 	
 	</select>
 	
 	<select id="facebookTotalCount" resultType="Integer">
 		select 
 			count(*)
 		from	
 			sns_data
 		where
 			sns_name = 'facebook'
 		
 		<include refid="search"></include>
 		
 	</select>
 	
 	<select id="instaList" resultType="SNSVO">
 		select 
			*
		from 
			sns_data
		where 
			textType is not null
		and
			sns_name = 'instagram'
		<include refid="search"></include>
		order 
			by createdate desc
		limit  
			#{startPage}, #{perPageNum}
 	
 	</select>
 	
 	<select id="instaTotalCount" resultType="Integer">
 		select 
 			count(*)
 		from	
 			sns_data
 		where
 			sns_name = 'instagram'
 		
 		<include refid="search"></include>
 		
 	</select>
 	
 	<select id="twitterList" resultType="SNSVO">
 		select 
			*
		from 
			sns_data
		where 
			textType is not null
		and
			sns_name = 'twitter'
		<include refid="search"></include>
		order 
			by createdate desc
		limit  
			#{startPage}, #{perPageNum}
 	
 	</select>
 	
 	<select id="twitterTotalCount" resultType="Integer">
 		select 
 			count(*)
 		from	
 			sns_data
 		where
 			sns_name = 'twitter'
 		
 		<include refid="search"></include>
 		
 	</select>
 	
 	<select id="getDateCount" resultType="SNSVO">
 		select 
 			date_format(writeDate, '%x-%m-%d') writeDate, like_cnt, reply_cnt, share_cnt, sns_name
  		from 
  			sns_data
  		where 
  			writeDate <![CDATA[>]]> #{startDate}
  		and 
  			writeDate <![CDATA[<]]> #{endDate}
  		and 
  			sns_name = #{sns_name}
  		order by  date_format(writeDate, '%x-%m-%d') desc
 	
 	</select>
 	
 	<update id="updateTextType">
		update
			sns_data
		set
			textType = #{textType}
		where
			sns_idx = #{sns_idx}
	
	</update>

	<update id="updateThumbnail">
		update
			sns_data
		set
			thumbnail = #{thumbnail}
		where
			sns_idx = #{sns_idx}
	
	</update>
	
	
 	
 </mapper>