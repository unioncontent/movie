<div class="main-body">
  <div class="page-wrapper">
    <div class="page-header">
      <div class="page-header-title">
        <h4>메일발송</h4>
      </div>
      <div class="page-header-breadcrumb">
        <ul class="breadcrumb-title">
          <li class="breadcrumb-item">
            <a href="/">
              <i class="fas fa-home"></i>
            </a>
          </li>
          <li class="breadcrumb-item"><a href="#!">메일발송</a></li>
        </ul>
      </div>
    </div>
    <div class="page-body">
      <div class="row">
        <div class="col-md-12">
          <div class="card">
            <div class="card-block">
              <div class="form-group row">
                <label class="col-sm-2 col-form-label">* 보내는 사람</label>
                <div class="col-sm-5">
                  <select id="M_sender" class="sender-select col-sm-12 form-control select2-hidden-accessible" tabindex="-1" aria-hidden="true">
                  </select>
                  <span class='messages'><p class='text-danger error'></p></span>
                </div>
              </div>
              <div class="form-group row">
                <label class="col-sm-2 col-form-label">* 받는 사람</label>
                <div class="col-sm-5">
                  <select id="M_recipi" class="recipi-select col-sm-12 form-control select2-hidden-accessible" multiple="" tabindex="-1" aria-hidden="true">
                  </select>
                  <span class='messages'><p class='text-danger error'></p></span>
                </div>
                <div class="col-sm-1 btn-check3">
                  <button id="recipisBtn" type="button" class="btn btn-inverse btn-modal">주소록</button>
                </div>
              </div>
              <div class="form-group row">
                <label class="col-sm-2 col-form-label">수신그룹<br/>(숨은참조)</label>
                <div class="col-sm-5">
                  <select id="M_group" class="group-select col-sm-12 form-control select2-hidden-accessible" tabindex="-1" aria-hidden="true">
                  </select>
                  <span class='messages'><p class='text-danger error'></p></span>
                </div>
                <div class="col-sm-1 btn-check1">
                  <button type="button" class="btn btn-inverse btn-modal">주소록</button>
                </div>
              </div>
              <div class="form-group row">
                <label class="col-sm-2 col-form-label">* 키워드</label>
                <div class="col-sm-5">
                  <select id="M_keyword" name="select" class="col-sm-6 form-control form-control-defalut f-left m-b-10">
                    <option value="0">선택</option>
                    <% for(var i=0; i < keywordList.length; i++) { %>
                      <option value="<%=keywordList[i].keyword_idx%>"><%=keywordList[i].keyword_main%></option>
                    <% } %>
                  </select>
                  <select id="M_mail_type" name="select" class="col-sm-6 form-control form-control-defalut f-left m-b-10">
                    <option value="0">선택</option>
                    <% for(var i=0; i < typeList.length; i++) { %>
                      <option value="<%=typeList[i].M_mail_type%>"><%=typeList[i].M_mail_type%></option>
                    <% } %>
                  </select>
                  <span class='messages'><p class='text-danger error'></p></span>
                </div>
              </div>
              <div class="form-group row">
                <label class="col-sm-2 col-form-label">* 메일제목</label>
                <div class="col-sm-7">
                  <input id="M_subject" type="text" class="form-control" placeholder="메일제목">
                  <span class='messages'><p class='text-danger error'></p></span>
                </div>
              </div>
              <div class="form-group row">
                <label class="col-sm-2 col-form-label">* 메일내용</label>
                <div class="col-sm-7">
                  <div id="M_body"></div>
                  <span class='messages'><p class='text-danger error'></p></span>
                </div>
              </div>
              <div class="form-group row">
                <label class="col-sm-2 col-form-label">첨부파일</label>
                <div class="col-sm-7">
                  <ul class="text-muted f-12  m-b-5">
                    <li>
                      <i class="fas fa-caret-right"></i> 파일 첨부는 최대 5개, 첨부파일의 전체 합 10MB까지 첨부 가능합니다.
                    </li>
                    <li>
                      <i class="fas fa-caret-right"></i> 첨부된 파일은 약 2주간 다운로드 가능하며 메일 하단의 링크형태로 제공됩니다.
                    </li>
                    <li>
                      <i class="fas fa-caret-right"></i> 첨부파일 유형은 실행파일 및 악성코드파일 등은 첨부하실 수 없습니다. (exe 등)
                    </li>
                  </ul>
                  <input type="hidden" id="fileList">
                  <input type="file" id="M_file" name="files[]" multiple="multiple" class="form-control">
                </div>
              </div>
              <div class="form-group row">
                <label class="col-sm-2 col-form-label">* 발송형태</label>
                <div id="type" class="form-radio">
                  <div class="col-sm-12">
                    <div class="radio radio-inline">
                      <label>
                        <input type="radio" value="0" name="M_type" checked>
                        <i class="helper"></i>즉시
                      </label>
                    </div>
                    <div class="radio radio-inline">
                      <label>
                        <input type="radio" value="1" name="M_type">
                        <i class="helper"></i>예약
                      </label>
                    </div>
                  </div>
                </div>
              </div>
              <div class="form-group row reserveTime" style="display:none;">
                <label class="col-sm-2 col-form-label">* 예약시간</label>
                <div class="col-sm-5 row">
                  <div class='col-sm-6 input-group p-r-0'>
                    <span class="input-group-addon bg-inverse">
                      <span class="far fa-calendar-alt"></span>
                    </span>
                    <input type="text" id="datepicker" class="form-control" />
                  </div>
                  <div class='col-sm-6 input-group p-r-0' id="date">
                    <span class="input-group-addon bg-inverse">
                      <span class="far fa-clock"></span>
                    </span>
                    <input type="text" id="timepicker" class="form-control" />
                  </div>
                  <span class='messages p-l-15'><p class='text-danger error'></p></span>
                </div>
              </div>
              <div class="row">
                <label class="col-sm-2"></label>
                <div class="col-sm-10">
                    <button id="sendBtn" type="submit" class="btn btn-inverse m-b-0">보내기</button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- Modal start-->
      <div class='modal fade' id='mailList-Modal' role='dialog'>
        <div class='modal-dialog modal-lg' role='document'>
          <div class='modal-content'>
            <div class='modal-header'>
              <h5 class="modal-title">메일 주소록</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">×</span>
              </button>
            </div>
            <div class='modal-body p-b-0'>
              <div class='card m-b-0'>
                <div class="card-block table-border-style">
                  <div class="table-responsive">
                    <table class="table table-columned">
                      <tbody>
                        <tr>
                          <td rowspan='4'>
                            <div class="right-icon-control m-b-5">
                              <input type="text" class="form-control  search-text" placeholder="메일주소찾기" id="searchMail">
                              <div class="form-icon">
                                <i class="fas fa-search"></i>
                              </div>
                            </div>
                            <div class="listBox">
                              <ul>
                                <li class="hasmenu">
                                  <h3 class="menubar">
                                    전체선택(현재 리스트)
                                    <i class="fas fa-sort-down float-right m-r-5"></i>
                                    <i class="fas fa-sort-up float-right m-r-5" style="display:none;"></i>
                                  </h3>
                                  <ul class="submenu">
                                    <li>
                                      <input id="chk_1" class="allCheck" type="checkbox" value="All"/>
                                      <label for="chk_1" title="그룹/이메일 전체선택">그룹/이메일 전체선택</label>
                                    </li>
                                    <li>
                                      <input id="chk_2" class="allCheck" type="checkbox" value="emailAll"/>
                                      <label for="chk_2" title="이메일 전체선택">이메일 전체선택</label>
                                    </li>
                                    <li>
                                      <input id="chk_3" class="allCheck" type="checkbox" value="groupAll"/>
                                      <label for="chk_3" title="그룹 전체선택">그룹 전체선택</label>
                                    </li>
                                  </ul>
                                </li>
                              </ul>
                            </div>
                            <div class="listBox">
                              <ul>
                                <li class="hasmenu">
                                  <h3 class="menubar">
                                    그룹
                                  </h3>
                                </li>
                                <ul class="submenu groupLi">
                                  <% for(var i=0; i < groupList.length; i++) { %>
                                    <li>
                                      <input type="checkbox" id="chk<%=i+1%>_g" value="<%=groupList[i].M_id%>" title="<%= groupList[i].M_group_title %>&lt;<%=groupList[i].groupCount%>명&gt;"/>
                                      <label for="chk<%=i+1%>_g" title="<%= groupList[i].M_group_title %>&lt;<%=groupList[i].groupCount%>명&gt;"><%= groupList[i].M_group_title%>&lt;<%=groupList[i].groupCount%>명&gt;</label>
                                    </li>
                                    <% }; %>
                                </ul>
                              </ul>
                            </div>
                            <div class="paging">
                              <input type="hidden" data-type="group" value="<%=groupListPageNum%>"/>
                              <input type="text" data-type="group" value="<%=groupListPageNum%>"/>
                               / <p class="count"><%=(Math.ceil(groupListCount/10) < 1)? 1 : Math.ceil(groupListCount/10)%></p>
                              <div class="bottomBtn">
                                <button class="btn btn-default btn-sm" data-type="group" data-value="first" data-num="0"><i class="fas fa-angle-double-left"></i></button>
                                <button class="btn btn-default btn-sm" data-type="group" data-value="prev" data-num="<%=(groupListPageNum != 1) ? groupListPageNum-1 : 1%>"><i class="fas fa-chevron-left"></i></button>
                                <button class="btn btn-default btn-sm" data-type="group" data-value="next" data-num="<%=(groupListPageNum != groupListCount) ? groupListPageNum+1 : groupListCount%>"><i class="fas fa-chevron-right"></i></button>
                                <button class="btn btn-default btn-sm" data-type="group" data-value="end" data-num="<%=Math.ceil(groupListCount/10)%>"><i class="fas fa-angle-double-right"></i></button>
                              </div>
                            </div>
                            <div class="listBox">
                              <ul>
                                <li class="hasmenu">
                                  <h3>이메일</h3>
                                  <ul class="submenu emailLi">
                                    <% for(var i=0; i < mailList.length; i++) { %>
                                      <li>
                                        <input type="checkbox" id="chk<%=i+1%>" value="<%=mailList[i].n_idx%>" title="<%= mailList[i].M_name %>&lt;<%=mailList[i].M_email%>&gt;"/>
                                        <label for="chk<%=i+1%>" title="<%= mailList[i].M_name %>&lt;<%=mailList[i].M_email%>&gt;"><%= mailList[i].M_name%>&lt;<%=mailList[i].M_email%>&gt;</label>
                                      </li>
                                      <% }; %>
                                  </ul>
                                </li>
                              </ul>
                            </div>
                            <div class="paging">
                              <input type="hidden" data-type="mail" value="<%=mailListPageNum%>"/>
                              <input type="text" data-type="mail" value="<%=mailListPageNum%>"/>
                               / <p class="count"><%=(Math.ceil(mailListCount/10) < 1)? 1 : Math.ceil(mailListCount/10)%></p>
                              <div class="bottomBtn">
                                <button class="btn btn-default btn-sm" data-type="mail" data-value="first" data-num="0"><i class="fas fa-angle-double-left"></i></button>
                                <button class="btn btn-default btn-sm" data-type="mail" data-value="prev" data-num="<%=(mailListPageNum != 1) ? (mailListPageNum-1) * 10 : 0%>"><i class="fas fa-chevron-left"></i></button>
                                <button class="btn btn-default btn-sm" data-type="mail" data-value="next" data-num="<%=(mailListPageNum != Math.ceil(mailListCount/10)) ? mailListPageNum * 10 : Math.ceil(mailListCount/10) * 10%>"><i class="fas fa-chevron-right"></i></button>
                                <button class="btn btn-default btn-sm" data-type="mail" data-value="end" data-num="<%=(Math.ceil(mailListCount/10)-1) * 10%>"><i class="fas fa-angle-double-right"></i></button>
                              </div>
                            </div>
                          </td>
                        </tr>
                        <tr>
                          <td>
                            <div class="rightLeftBtn">
                              <button class="btn btn-inverse btn-sm m-b-5" data-value="group" data-type="right"><i class="fas fa-chevron-right"></i></button>
                              <button class="btn btn-inverse btn-sm m-b-5" data-value="group" data-type="left"><i class="fas fa-chevron-left"></i></button>
                              <button class="btn btn-inverse btn-sm m-b-5" data-value="group" data-type="allLeft"><i class="fas fa-angle-double-left"></i></button>
                            </div>
                          </td>
                          <td class="rightTd">
                            <div class="selectedBox">
                              <h3>수신그룹(숨은참조) <span class="text-info">0</span></h3>
                              <div class="box">
                                <ul id="groupUl">

                                </ul>
                              </div>
                            </div>
                          </td>
                        </tr>
                        <tr>
                          <td>
                            <div class="rightLeftBtn">
                              <button class="btn btn-inverse btn-sm m-b-5" data-value="recipi" data-type="right"><i class="fas fa-chevron-right"></i></button>
                              <button class="btn btn-inverse btn-sm m-b-5" data-value="recipi" data-type="left"><i class="fas fa-chevron-left"></i></button>
                              <button class="btn btn-inverse btn-sm m-b-5" data-value="recipi" data-type="allLeft"><i class="fas fa-angle-double-left"></i></button>
                            </div>
                          </td>
                          <td>
                            <div class="selectedBox">
                              <h3>받는 사람 <span class="text-info" >0</span></h3>
                              <div class="box">
                                <ul id="recipiUl">

                                </ul>
                              </div>
                            </div>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-inverse" id="saveBtn">적용</button>
              <button type="button" class="btn btn-default" data-dismiss="modal">취소</button>
            </div>
          </div>
        </div>
      </div>
      <!-- Modal end-->
    </div>
  </div>
</div>
<!-- select2 -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.5/css/select2.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.5/js/select2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.5/js/i18n/ko.js"></script>
<!-- filer -->
<link rel="stylesheet" type="text/css" href="/css/jquery.filer.css">
<script src="/js/jquery.filer.min.js"></script>
<!-- editor -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.9/summernote-lite.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.9/summernote-lite.js"></script>
<script src="/js/summernote-ko-KR.js"></script>
<!-- alert -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert@2.1.0/dist/sweetalert.min.js"></script>
<!-- time  -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/wickedpicker@0.4.3/stylesheets/wickedpicker.css">
<script src="https://cdn.jsdelivr.net/npm/wickedpicker@0.4.3/dist/wickedpicker.min.js"></script>

<style>
  /* modal select */
  button.close{
    margin-top: 0;
    font-size: 26px;
  }
  .paging{
    margin-bottom: 10px;
    padding: 5px 7px 5px 0px;
  }
  .paging > input{
    width: 26px;
    line-height: 16px;
    padding: 0 2px 0 0;
    text-align: right;
    vertical-align: 0;
    color: #000;
    font-size: 12px;
  }
  .rightLeftBtn{
    text-align: center;
    padding-top: 27%;
  }
  .bottomBtn{
    display: inline;
    float: right;
  }
  .rightLeftBtn .btn,
  .bottomBtn .btn{
    display: inherit;
    margin: 0px auto;
    margin-bottom: 5px;
    padding: 5px 7px 5px 10px;
  }
  .rightLeftBtn .btn[data-type="allLeft"] {
    padding-right: 5px;
  }
  .bottomBtn .btn{
    display: inline;
    padding-right: 4px;
  }
  .count{
    display: inline;
  }
  .rightTd{
    table-layout: fixed;
    width: 237px;
  }
  .listBox{
    height: 100%;
  }
  .listBox li label,
  #groupUl li label,
  #recipiUl li label{
    max-width: 225px;
    display: inline-block;
    margin-bottom: 0px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-size: 12px;
    line-height: 12px;
  }
  #groupUl li label,
  #recipiUl li label{
    max-width: 178px;
  }
  .selectedBox > h3,
  .listBox li > h3{
    font-size: 12px;
    font-weight: bold;
  }
  .listBox li > h3{
    margin-bottom: 0px;
    padding-bottom: .5rem;
  }
  .emailLi,.groupLi{
    min-height: 200px;
    overflow: auto;
  }
  .selectedBox > .box{
    height: 291px;
    padding: 7px;
    border: 1px solid #ddd;
    backgceil-color: white;
    overflow: auto;
  }
  #mailList-Modal .modal-body{
    max-height: 700px;
  }
  /* 라이브러리 css 수정 */
  .select2-container--default .select2-selection--single .select2-selection__arrow{
    height: 37px;
  }
  .select2-container .select2-selection--single{
    height: 37px;
  }
  .select2-container--default .select2-selection--single .select2-selection__rendered{
    line-height: 27px;
  }
  .select2-container--default .select2-selection--multiple,
  .select2-container--default .select2-selection--single {
    backgceil-color: white;
    border: 2px solid rgba(0,0,0,.15);
    font-size: 14px;
    border-radius: 2px;
    cursor: text;
  }
  .select2-container--default .select2-selection--multiple{
    padding-top: 1px;
    padding-bottom: 1px;
    padding-left: 8px;
  }
  .select2-container--default.select2-container--focus .select2-selection--multiple,
  .select2-container--default.select2-container--focus .select2-selection--single {
    color: #464a4c;
    border-width: 2px;
    backgceil-color: #fff;
    border-color: #3498DB!important;
    outline: 0;
  }
  .dropdown-toggle::after{
    display: none;
  }
  .note-editor .note-editing-area .note-editable table td,
  .note-editor .note-editing-area .note-editable table th{
    border: 1px solid #252525;
  }
  .jFiler-theme-default .jFiler-input {
    width: 100%;
    height: 41px;
  }
  .jFiler-theme-default .jFiler-input-caption,
  .jFiler-theme-default .jFiler-input-button{
    padding-top: 10px;
  }
</style>
<script type="text/javascript">
  $(document).ready(function() {
    var dt = new Date();
    var options = {
      now: dt.getHours()+":"+String(Math.ceil(dt.getMinutes() / 10) * 10),
      twentyFour: true, //Display 24 hour format, defaults to false
      upArrow: 'wickedpicker__controls__control-up', //The up arrow class selector to use, for custom CSS
      downArrow: 'wickedpicker__controls__control-down', //The down arrow class selector to use, for custom CSS
      close: 'wickedpicker__close', //The close class selector to use, for custom CSS
      hoverState: 'hover-state', //The hover state class to use, for custom CSS
      title: '10분단위로 설정해주세요.', //The Wickedpicker's title,
      showSeconds: false, //Whether or not to show seconds, secondsInterval: 1, //Change interval for seconds, defaults to 1  ,
      minutesInterval: 10, //Change interval for minutes, defaults to 1
      beforeShow: null, //A function to be called before the Wickedpicker is shown
      show: null, //A function to be called when the Wickedpicker is shown
      clearable: false, //Make the picker's input clearable (has clickable "x")
    };
    $('#timepicker').wickedpicker(options);
    $('#datepicker').datepicker({
      dateFormat: 'yy-mm-dd',
      prevText: '이전 달',
      nextText: '다음 달',
      monthNames: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'],
      monthNamesShort: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'],
      dayNames: ['일','월','화','수','목','금','토'],
      dayNamesShort: ['일','월','화','수','목','금','토'],
      dayNamesMin: ['일','월','화','수','목','금','토'],
      yearSuffix: '년',
      showMonthAfterYear: true,
      minDate: 0,
      maxDate: "+7D"
    });
    // select2
    // 보내는사람
    $(".sender-select").select2({
      ajax: {
        url: "/email/searchAll",
        dataType: 'json',
        delay: 250,
        data: function (params) {
          return {
            search: params.term, // search term
            page: params.page
          };
        },
        processResults: function (data, params) {
          params.page = params.page || 1;
          return {
            results: data.items,
            pagination: {
              more: (params.page * 10) < data.total_count
            }
          };
        },
        cache: true
      },
      multiple: false,
      placeholder: '보내는 사람',
      language: 'ko',
      escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
      minimumInputLength: 0,
      templateResult: function (repo) {
        if (repo.loading) {
          return repo.text;
        }
        console.log('return:',markup);
        var markup = repo['M_name']+" &lt;"+repo['M_email']+"&gt;";
        return markup;
      },
      templateSelection: function (repo) {
        if(typeof repo['M_name'] == 'undefined'){
          return repo.text;
        }
        return repo['M_name']+" &lt;"+repo['M_email']+"&gt;";
      }
    });
    // 받는사람
    $(".recipi-select").select2({
      ajax: {
        url: "/email/searchAll",
        dataType: 'json',
        delay: 250,
        data: function (params) {
          return {
            search: params.term, // search term
            page: params.page
          };
        },
        processResults: function (data, params) {
          params.page = params.page || 1;
          return {
            results: data.items,
            pagination: {
              more: (params.page * 10) < data.total_count
            }
          };
        },
        cache: true
      },
      multiple: true,
      placeholder: '받는 사람',
      // language: 'ko',
      escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
      minimumInputLength: 0,
      templateResult: function (repo) {
        if (repo.loading) {
          return repo.text;
        }
        var markup = repo['M_name']+" &lt;"+repo['M_email']+"&gt;";
        return markup;
      },
      templateSelection: function (repo) {
        if(typeof repo['M_name'] == 'undefined'){
          return repo.text;
        }
        return repo['M_name']+" &lt;"+repo['M_email']+"&gt;";
      }
    });
    // 수신자 그룹
    $(".group-select").select2({
      ajax: {
        url: "/email/searchGroup",
        dataType: 'json',
        delay: 250,
        data: function (params) {
          return {
            search: params.term, // search term
            page: params.page
          };
        },
        processResults: function (data, params) {
          params.page = params.page || 1;
          return {
            results: data.items,
            pagination: {
              more: (params.page * 10) < data.total_count
            }
          };
        },
        cache: true
      },
      multiple: true,
      placeholder: '수신자 그룹',
      language: 'ko',
      escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
      minimumInputLength: 0,
      templateResult: function (repo) {
        if (repo.loading) {
          return repo.text;
        }
        var markup = repo['M_group_title']+" &lt; "+repo['groupCount']+"명 &gt;";
        return markup;
      },
      templateSelection: function (repo) {
        if(typeof repo['M_group_title'] == 'undefined'){
          return repo.text;
        }
        return repo['M_group_title']+" &lt; "+repo['groupCount']+"명 &gt;";
      }
    });
    // 메일 editor
    $('#M_body').summernote({
      lang: 'ko-KR',
      tabsize: 2,
      height: 300,
      toolbar: [
        ['style', ['style']],
        ['style', ['bold', 'italic', 'underline', 'clear']],
        ['font', ['fontname']],
        ['fontsize', ['fontsize']],
        ['height', ['height']],
        ['color', ['color']],
        ['para', ['ul', 'ol', 'paragraph']],
        ['table', ['table']],
        ['insert', ['picture','link']],
        ['Misc',['fullscreen','codeview','help']]
      ],
      fontNames: [ '맑은 고딕', '굴림', '돋움', '바탕', '궁서', 'Helvetica', 'Serif', 'Sans'],
      fontNamesIgnoreCheck: [ 'Malgun Gothic', 'Gulim', 'Dotum', 'Batang', 'Gungsuh', 'Helvetica', 'Serif', 'Sans'],
      callbacks: {
        onImageUpload : function(file, editor, welEditable) {
          saveImgFile(file[0], editor, welEditable);
        }
      }
    });
    // 첨부파일
    $('#M_file').filer({
      limit: '5',
      maxSize: '10',
      changeInput: true,
      showThumbs: true,
      uploadFile: {
        url: "/email/send/files",
        data: {},
        type: 'POST',
        enctype: 'multipart/form-data',
        beforeSend: function(){},
        success: function(data, el){
          var fileListVal = $('#fileList').val();
          if(fileListVal != "" && fileListVal != ","){
            fileListVal +=',';
          }
          if (fileListVal.indexOf(data[1]) == -1) {
            $('#fileList').val(fileListVal+data[1]);
          }
          var parent = el.find(".jFiler-jProgressBar").parent();
          el.find(".jFiler-jProgressBar").fadeOut("slow", function(){
            $("<div class=\"jFiler-item-others text-success\"><i class=\"icon-jfi-check-circle\"></i> Success</div>").hide().appendTo(parent).fadeIn("slow");
          });
          console.log($('#fileList').val());
        },
        error: function(el){
          console.log(el);
          alert('파일 타입과 파일의 경로를 다시 확인해주세요.');
          var parent = el.find(".jFiler-jProgressBar").parent();
          el.find(".jFiler-jProgressBar").fadeOut("slow", function(){
            $("<div class=\"jFiler-item-others text-error\"><i class=\"icon-jfi-minus-circle\"></i> Error</div>").hide().appendTo(parent).fadeIn("slow");
          });
        },
        statusCode: {},
        onProgress: function(){},
      },
      dragDrop: {
        dragEnter: null,
        dragLeave: null,
        drop: null,
      },
      addMore: true,
      clipBoardPaste: true,
      excludeName: null,
      beforeShow: function(){return true},
      onSelect: function(){},
      afterShow: function(){},
      onRemove: function(e){
        var now = $.datepicker.formatDate('yymmdd', new Date());
        var removeEle = $(e).find('.jFiler-item-title').prop('title');
        var fileListVal = $('#fileList').val();
        var fileListArr = fileListVal.split(',');
        var removeIdx = $.inArray(now+'/'+removeEle, fileListArr);
        if (removeIdx != -1) {
          delete fileListArr[removeIdx];
          $('#fileList').val(fileListArr.join());
        }
        console.log($('#fileList').val());
      },
      onEmpty: function(){},
      captions: {
        button: "등록",
        feedback: "첨부할 파일을 선택해주세요.",
        feedback2: "파일이 선택되었습니다.",
        // drop: "Drop file here to Upload",
        removeConfirmation: "이 파일을 제거 하시겠습니까??",
        errors: {
          filesLimit: "{{fi-limit}} 개의 파일만 업로드 할 수 있습니다.",
          // filesType: "Only Images are allowed to be uploaded.",
          filesSize: "{{fi-name}} 이 너무 큽니다! 파일은 최대 {{fi-maxSize}} MB까지 첨부 가능합니다.",
          filesSizeAll: "선택하신 파일이 너무 큽니다! 첨부파일의 전체 합 {{fi-maxSize}} MB까지 첨부 가능합니다."
        }
      }
    });
  });
  // 예약기능 클릭시
  $('input[name=M_type]').on('change',function(){
    $('.reserveTime').toggle();
  });
  // 주소록 js
  var lastChecked = null;
  // 모달 적용버튼 클릭시
  $('#saveBtn').on('click',function(){
    var selectGroup = $("#groupUl input").get();
    var selectRecipi = $("#recipiUl input").get();
    $('.group-select').val(null).trigger("change");
    $('.recipi-select').val(null).trigger("change");

    selectGroup.forEach(function(ele,idx){
      var param = {
        id:$(ele).val(),
        text:$(ele).prop('title')
      };
      pushEle($('.group-select'),param);
    });
    selectRecipi.forEach(function(ele,idx){
      var param = {
        id:$(ele).val(),
        text:$(ele).prop('title')
      };
      pushEle($('.recipi-select'),param);
    });
    $("#mailList-Modal").modal('hide');
  });
  function pushEle(tag,data){
    data.text = data.text.replace('<','&lt;').replace('>','&gt;');
    if (tag.find("option[value='" + data.id + "']").length) {
      tag.val(data.id).trigger('change');
    } else {
      var newOption = new Option(data.text, data.id, true, true);
      tag.append(newOption).trigger('change');
    }
  }
  $(document).on('click','#groupUl input, #recipiUl input',function(e) {
    console.log(this);
    console.log(e.shiftKey);
    if (!lastChecked) {
      lastChecked = this;
      return;
    }
    if (e.shiftKey) {
      var start = $('#'+$(this).parents('ul').prop('id')+' input').index(this);
      var end = $('#'+$(this).parents('ul').prop('id')+' input').index(lastChecked);
      $('#'+$(this).parents('ul').prop('id')+' input').slice(Math.min(start, end), Math.max(start, end) + 1).prop('checked', lastChecked.checked);
    }
    lastChecked = this;
  });
  $(document).on("click",".menubar",function(){
    // 전체선택,그룹 리스트 닫고 열기
    $(this).next('.submenu').toggle();
  });
  $(".allCheck").on('change',function(e){
    // 전체선택 js
    var checkBool = null;
    if($(this).is(":checked")){
      checkBool = true;
    }else{
      checkBool = false;
    }
    console.log(checkBool);
    console.log($(this).val());
    if($(this).val() == "All"){
      $('#chk_1').prop('checked', checkBool);
      $('#chk_2').prop('checked', checkBool);
      $('#chk_3').prop('checked', checkBool);
      $(".submenu").eq(1).find('input[type=checkbox]').prop('checked', checkBool);
      $(".submenu").eq(2).find('input[type=checkbox]').prop('checked', checkBool);
    }
    else if($(this).val() == "emailAll"){
      $('#chk_2').prop('checked', checkBool);
      $(".submenu").eq(2).find('input[type=checkbox]').prop('checked', checkBool);
    }
    else{
      $('#chk_3').prop('checked', checkBool);
      $(".submenu").eq(1).find('input[type=checkbox]').prop('checked', checkBool);
    }
    e.stopPropagation();
  });
  $(document).on("click",".rightLeftBtn button",function(){
    // 요소 옮기기
    var boxType = $(this).data('value');
    var boxAction = $(this).data('type');
    console.log(boxType);
    console.log(boxAction);
    if(boxAction == "right"){
      var groupBool = false;
      $(".listBox input[type='checkbox']:checked").each(function() {
        if($(this).val().indexOf('All') != -1){
          return;
        }
        var id = $(this).prop('id');
        var checkVal = $(this).val();
        var html = '<li>'+$(this).parents('li').html()+'</li>';
        html = html.replace(/chk/g,'selected_chk');
        groupBool = false;
        if(boxType == "group" && id.indexOf("_g") != -1){
          if($("#groupUl").find('input[value='+checkVal+']').length == 0){
            $("#groupUl").append(html);
          }
        }
        else if(boxType == "group" && id.indexOf("_g") == -1){
          groupBool = true;
        }
        else if(boxType == "recipi"){
          if($("#recipiUl").find('input[value='+checkVal+']').length == 0){
            $("#recipiUl").append(html);
          }
        }
        $(this).prop('checked', groupBool);
      });
      $('#chk_1').prop('checked', false);
      $('#chk_2').prop('checked', groupBool);
      $('#chk_3').prop('checked', false);
    }
    else if(boxAction == "left"){
      if(boxType == "group"){
        $("#groupUl input[type='checkbox']:checked").each(function() {
          $(this).parents('li').remove();
        });
      }
      else{
        $("#recipiUl input[type='checkbox']:checked").each(function() {
          $(this).parents('li').remove();
        });
      }
    }
    else{
      if(boxType == "group"){
        $("#groupUl input[type='checkbox']").each(function() {
          $(this).parents('li').remove();
        });
      }
      else{
        $("#recipiUl input[type='checkbox']").each(function() {
          $(this).parents('li').remove();
        });
      }
    }
    $('ul#groupUl').parents('.selectedBox').find('.text-info').text($('#groupUl').find('li').length);
    $('ul#recipiUl').parents('.selectedBox').find('.text-info').text($('#recipiUl').find('li').length);
  });
  $('.emailLi input[type=checkbox]').on('change',function(){
    $('#chk_1').prop('checked', false);
    $('#chk_2').prop('checked', false);
  });
  $('.groupLi input[type=checkbox]').on('change',function(){
    $('#chk_1').prop('checked', false);
    $('#chk_3').prop('checked', false);
  });
  // 모달 열기
  $(".btn-modal").on("click",function(){
    var recipiIdxArr = $('.recipi-select').val();
    modalboxSetting('recipi',recipiIdxArr);
    var groupIdxArr = $('.group-select').val();
    modalboxSetting('group',groupIdxArr);

    // 열기 전 페이징 체크 후 버튼 제거
    $('.paging .count').each(function() {
      if($(this).text() == '1'){
        $(this).next('.bottomBtn').hide();
      }
    });
    $("#mailList-Modal").modal('show');
  });
  // 모달 박스ul에 li setting
  function modalboxSetting(name,arr){
    $("#"+name+"Ul").empty();
    if(arr.length == 0){
      return false;
    }
    var groupT = (name == 'group') ? '_g' : '';
    arr.forEach(function(ele,idx){
      var nidx = ele;
      var text = $('.'+name+'-select').find('option[value='+ele+']').text();
      var html = '<li><input type="checkbox" id="input_chk'+idx+groupT+'" value="'+nidx+'" title="'+text+'">\
      <label for="input_chk'+idx+groupT+'" title="'+text+'">'+text+'</label></li>';
      $("#"+name+"Ul").append(html);
    });
    $('ul#'+name+'Ul').parents('.selectedBox').find('.text-info').text($('#'+name+'Ul').find('li').length);
  }

  // 모달 메일 주소록 검색
  $('#searchMail').on('change',function(){
    var param = {
      type: 'search',
      search: $('#searchMail').val().replace(/ /gi, "")
    };
    modalListGetPage(param);
  });
  // 모달 페이징 - input page tag 처리
  $('.paging input').on('change',function(){
    if($(this).val() <= 0 || $(this).val() > ($(this).next('.count').text())){
      alert('페이지 수를 다시 작성해주세요.');
      $(this).val($(this).prev('input[type=hidden]').val());
    }
    else{
      var param = {
        type: $(this).data('type'),
        page: ($(this).val() -1)*10
      };
      var search = $('#searchMail').val().replace(/ /gi, "");
      if(search != ''){
        param.search = search;
      }
      modalListGetPage(param);
    }
  });
  // 모달 페이징 - 버튼처리
  $('.bottomBtn button').on('click',function(){
    if($(this).data('value') == 'next' || $(this).data('value') == 'end'){
      if($(this).parents('.paging').find('input[type=hidden]').val() == $(this).parents('.paging').find('.count').text()){
        alert('마지막 페이지입니다.');
        return false;
      }
    }
    var param = {
      type: $(this).data('type'),
      page: $(this).data('num')
    };
    var search = $('#searchMail').val().replace(/ /gi, "");
    if(search != ''){
      param.search = search;
    }
    modalListGetPage(param);
  });
  // 모달 리스트 페이징 ajax
  function modalListGetPage(param){
    $.ajax({
      url: '../email/getModalListPage',
      type: 'post',
      data : param,
      datatype : 'json',
      error:function(request,status,error){
        console.log('code:'+request.status+'\n'+'message:'+request.responseText+'\n'+'error:'+error);
        alert('문제가 생겼습니다. 다시 시도해주세요.');
      },
      success:function(data){
        console.log(data);
        if(data.email.length != 0){
          $(".emailLi").empty();
          data.email.forEach(function(ele,idx){
            var html = '<li>\
              <input type="checkbox" id=\"chk'+(idx+1)+'\" value=\"'+ele.n_idx+'\"/>\
              <label for=\"chk'+(idx+1)+'\" title=\"'+ele.M_name+'&lt;'+ele.M_email+'&gt;\">'+ele.M_name+'&lt;'+ele.M_email+'&gt;</label>\
            </li>';
            $(".emailLi").append(html);
          });
          bottomPagingSetting(1,data.emailPage,data.emailTotal);
        }
        if(data.group.length != 0){
          $(".groupLi").empty();
          data.group.forEach(function(ele,idx){
            var html = '<li>\
            <input type="checkbox" id=\"chk'+(idx+1)+'_g\" value=\"'+ele.M_id+','+ele.M_group_title+'\"/>\
            <label for=\"chk'+(idx+1)+'_g\" title=\"'+ele.M_group_title+'&lt;'+ele.groupCount+'명&gt;\">'+ele.M_group_title+'&lt;'+ele.groupCount+'명&gt;</label>\
            </li>'
            $(".groupLi").append(html);
          });
          bottomPagingSetting(0,data.groupPage,data.groupTotal);
        }
      }
    });
  }
  // 모달 리스트 페이징
  function bottomPagingSetting(tagEq,page,total){
    var pagingTag = $('.paging').eq(tagEq);
    var btnTag = $('.bottomBtn').eq(tagEq);
    var mathTotalPage = Math.ceil(total/10);
    pagingTag.find('.count').text((mathTotalPage < 1)? 1 : mathTotalPage);
    pagingTag.find('input').val(page);

    if(total > 2){
      var prevStartNum = (page == 1) ? 0 : (page-2)*10 ;
      var endStartNum = Math.floor(total/10)*10;
      var nextStartNum = (page == mathTotalPage) ? endStartNum : page*10;

      btnTag.find('button').eq(1).data('num',prevStartNum);
      btnTag.find('button').eq(2).data('num',nextStartNum);
      btnTag.find('button').eq(3).data('num',endStartNum);

      console.log(btnTag.find('button').eq(1).data('num'));
      console.log(btnTag.find('button').eq(2).data('num'));
      console.log(btnTag.find('button').eq(3).data('num'));
      btnTag.show();
    }
    else{
      btnTag.hide();
    }
  }
  // 메일 editor js
  function saveImgFile(file){
    // console.log('saveImgFile:',file);
    data = new FormData();
    data.append("file", file);
    $.ajax({
      type: "POST",
      url: "/email/send/img",
      data: data,
      cache: false,
      contentType : false,
      processData : false,
      success: function(data) {
        // console.log('success:',data);
        $('#M_body').summernote('insertImage', 'http://localhost:3000/'+data);
      }
    });
  }

  // 메일 보내기 버튼 클릭시
  $("#sendBtn").on("click",function(){
    swal({
      title: "메일 보내시겠습니까?",
      icon: "warning",
      buttons: ["취소", true],
      dangerMode: true,
    })
    .then((value) => {
      if (value != null) {
        var check=true;
        var now = $.datepicker.formatDate('yymmdd', new Date());
        var fileListArr = $("#fileList").val().split(',');
        var fileListStr = "";
        var fileNameStr = "";
        var fileDBListStr = "";
        $.each(fileListArr, function(index, value) {
          if(value != ""){
            fileDBListStr += value;
            fileListStr += 'http://localhost:3000/uploads/files/'+value;
            fileNameStr += value.replace(now+'/','');
            console.log(fileListArr.lengt);
            console.log(index);
            console.log(fileListArr.length-1);
            if(fileListArr.length-1 != index){
              fileListStr += '|';
              fileDBListStr += '|';
              fileNameStr += '|';
            }
          }
        });

        var param = {
          'M_sender': $(".sender-select").select2("val"),
          'M_recipi': $(".recipi-select").select2("val"),
          'M_group': $('.group-select').val() || [],
          'M_keyword': $("#M_keyword option:selected").val(),
          'M_mail_type': $("#M_mail_type option:selected").val(),
          'M_body': $("#M_body").summernote('code'),
          'M_subject': $("#M_subject").val(),
          'M_file':fileListStr,
          'M_fileName':fileNameStr,
          'M_file_d':fileDBListStr,
          'M_type': $("input:radio[name=M_type]:checked").val()
        };
        if(param["M_sender"] == null){
          check = requiredMessage("M_sender","보내는 사람를 선택해주세요.");
        }
        if(param["M_recipi"] == ""){
          check = requiredMessage("M_recipi","받는사람을 선택해주세요.");
        }
        if(param["M_keyword"] == 0){
          check = requiredMessage("M_keyword","키워드를 선택해주세요.");
        }
        if(param["M_mail_type"] == 0){
          check = requiredMessage("M_mail_type","메일타입을 선택해주세요.");
        }
        if(param["M_subject"] == ""){
          check = requiredMessage("M_subject","메일제목을 입력해주세요.");
        }
        if(param["M_body"] == "" || param["M_body"] == "<p><br></p>"){
          check = requiredMessage("M_body","메일내용 입력해주세요.");
        }
        if(param["M_type"] == "1"){
          var time = $('#timepicker').val();
          var date = $('#datepicker').val();
          if(time == "" || date == ""){
            check = requiredMessage("date","예약시간을 설정해주세요.");
          }
          else if(time.split(' : ')[1] % 10 != 0){
            check = requiredMessage("date","예약시간은 10분단위로 설정해주세요.");
          }
          else{
            var endDate = date+" "+time.replace(' : ',':')+":00";
            var startDateCompare = new Date();
            var endDateCompare = new Date(endDate);
            if(startDateCompare.getTime() >= endDateCompare.getTime()){
              check = requiredMessage("date","현재시간보다 작습니다.");
            }
            else{
              param['end_reserve_time'] = date+" "+time.replace(' : ',':')+":00";
            }
          }
        }

        if(check){
          $('span.messages').find('.error').text('');
          SendEmails(param);
        }
      }
    });
  });
  // 메일 보내기 ajax
  function SendEmails(param){
    console.log('SendEmails');
    console.log(param);
    $.ajax({
      url: '/email/send',
      type: 'post',
      data : param,
      datatype : 'json',
      error:function(request,status,error){
        console.log('code:'+request.status+'\n'+'message:'+request.responseText+'\n'+'error:'+error);
        swal("ERROR!", request.responseText, "error");
      },
      success:function(data){
        swal("SUCCESS!", data, "success");
        // window.location.reload();
      }
    });
  }
  // input box 경고문
  function requiredMessage(target,msg){
    $("#"+target).siblings('.messages').children('.error').text(msg);
    // $("#"+target).addClass("form-control-danger");
    return false;
  }

</script>
