declare const _default: {
    noop: (...x: any[]) => void;
    noarg: (f: Function) => (...x: any[]) => any;
    compose: (fa: (...x: any[]) => any, fb: (...x: any[]) => any) => (...x: any[]) => any;
    constant: <T>(value?: T) => (...x: any[]) => T;
    identity: <T = any>(x: T) => T;
    tripleEquals: <T>(a: T, b: T) => boolean;
    curry: (f: any, ...x: any[]) => (...x: any[]) => any;
    not: (f: (...x: any[]) => boolean) => (...x: any[]) => boolean;
    die: (msg: string) => () => never;
    apply: <T>(f: (...x: any[]) => T) => T;
    call: (f: (...x: any[]) => any) => void;
    never: (...x: any[]) => false;
    always: (...x: any[]) => true;
};
export default _default;
