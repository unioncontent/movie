export interface LazyValue<T> {
    get: (callback: (value: T) => void) => void;
    map: <U>(mapper: (value: T) => U) => LazyValue<U>;
    isReady: () => boolean;
}
export declare const LazyValue: {
    nu: <T>(baseFn: (completer: (value: T) => void) => void) => LazyValue<T>;
    pure: <T>(a: T) => LazyValue<T>;
};
