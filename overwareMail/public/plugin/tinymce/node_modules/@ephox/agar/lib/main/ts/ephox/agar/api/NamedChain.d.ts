declare const _default: {
    inputName: (...x: any[]) => any;
    asChain: (chains: any) => {
        runChain: (value: any, next: any, die: any) => void;
    };
    write: (name: any, chain: any) => {
        runChain: (value: any, next: any, die: any) => void;
    };
    direct: (inputName: any, chain: any, outputName: any) => {
        runChain: (value: any, next: any, die: any) => void;
    };
    writeValue: (name: any, value: any) => {
        runChain: (value: any, next: any, die: any) => void;
    };
    overwrite: (inputName: any, chain: any) => {
        runChain: (value: any, next: any, die: any) => void;
    };
    read: (name: any, chain: any) => {
        runChain: (value: any, next: any, die: any) => void;
    };
    merge: (names: any, combinedName: any) => {
        runChain: (value: any, next: any, die: any) => void;
    };
    bundle: (f: any) => {
        runChain: (value: any, next: any, die: any) => void;
    };
    output: (name: any) => {
        runChain: (value: any, next: any, die: any) => void;
    };
    outputInput: {
        runChain: (value: any, next: any, die: any) => void;
    };
    pipeline: (namedChains: any, onSuccess: any, onFailure: any, delay?: any) => void;
};
export default _default;
