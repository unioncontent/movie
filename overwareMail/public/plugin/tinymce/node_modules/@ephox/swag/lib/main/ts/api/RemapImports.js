"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
exports.__esModule = true;
var Parser_1 = require("../ast/Parser");
var Serializer_1 = require("../ast/Serializer");
var PatchExports_1 = require("../ast/PatchExports");
var Remap_1 = require("../ast/Remap");
var CachedFileSystem_1 = require("../fs/CachedFileSystem");
var MainModuleCache_1 = require("../ast/MainModuleCache");
var defaultOptions = {
    forceFlat: true
};
var transform = function (fs, mainModuleCache, forceFlat) { return function (code, id) {
    var program = Parser_1.parse(code);
    PatchExports_1.patch(program);
    Remap_1.remap(fs, mainModuleCache, id, program, forceFlat);
    var newCode = Serializer_1.serialize(program);
    return {
        code: newCode,
        map: { version: 3, sources: [], mappings: '' }
    };
}; };
var remapImports = function (options) {
    if (options === void 0) { options = defaultOptions; }
    var combinedOptions = __assign({}, defaultOptions, options);
    var fs = combinedOptions.fileSystem ? combinedOptions.fileSystem : CachedFileSystem_1.getFileSystem();
    var mainModuleCache = MainModuleCache_1.createMainModuleCache();
    return {
        name: 'swag-remap-imports',
        transform: transform(fs, mainModuleCache, combinedOptions.forceFlat)
    };
};
exports.remapImports = remapImports;
