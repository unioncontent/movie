"use strict";
exports.__esModule = true;
var Fail_1 = require("../utils/Fail");
var createImport = function (kind, name, fromName, modulePath) {
    return { kind: kind, name: name, fromName: fromName, modulePath: modulePath };
};
exports.createImport = createImport;
var readDefaultSpecifier = function (modulePath, specifier) {
    return createImport('default', specifier.local.name, specifier.local.name, modulePath);
};
var readNamespaceSpecifier = function (modulePath, specifier) {
    return createImport('namespace', specifier.local.name, specifier.local.name, modulePath);
};
var readImportSpecifier = function (modulePath, specifier) {
    return createImport('specified', specifier.local.name, specifier.imported.name, modulePath);
};
var readImportDeclaration = function (node) {
    return node.specifiers.map(function (specifier) {
        if (specifier.type === 'ImportDefaultSpecifier') {
            var name = node.source.value;
            return readDefaultSpecifier(name, specifier);
        }
        else if (specifier.type === 'ImportNamespaceSpecifier') {
            var name = node.source.value;
            return readNamespaceSpecifier(name, specifier);
        }
        else if (specifier.type === 'ImportSpecifier') {
            var name = node.source.value;
            return readImportSpecifier(name, specifier);
        }
        else {
            Fail_1.fail('Unknown specifier.');
            return null;
        }
    });
};
var readImports = function (program) {
    return program.body.reduce(function (acc, node) {
        if (node.type === 'ImportDeclaration') {
            var imports = readImportDeclaration(node);
            return acc.concat(imports);
        }
        return acc;
    }, []);
};
exports.readImports = readImports;
var toAst = function (imports) {
    return imports.map(function (imp) {
        if (imp.kind === 'default') {
            return {
                type: 'ImportDeclaration',
                specifiers: [
                    {
                        type: 'ImportDefaultSpecifier',
                        local: {
                            type: 'Identifier',
                            name: imp.name
                        }
                    }
                ],
                source: {
                    type: 'Literal',
                    value: imp.modulePath,
                    raw: "'" + imp.modulePath + "'"
                }
            };
        }
        else if (imp.kind === 'namespace') {
            return {
                type: 'ImportDeclaration',
                specifiers: [
                    {
                        type: 'ImportNamespaceSpecifier',
                        local: {
                            type: 'Identifier',
                            name: imp.name
                        }
                    }
                ],
                source: {
                    type: 'Literal',
                    value: imp.modulePath,
                    raw: "'" + imp.modulePath + "'"
                }
            };
        }
        else if (imp.kind === 'specified') {
            return {
                type: 'ImportDeclaration',
                specifiers: [
                    {
                        type: 'ImportSpecifier',
                        imported: {
                            type: 'Identifier',
                            name: imp.fromName
                        },
                        local: {
                            type: 'Identifier',
                            name: imp.name
                        }
                    }
                ],
                source: {
                    type: 'Literal',
                    value: imp.modulePath,
                    raw: "'" + imp.modulePath + "'"
                }
            };
        }
        else {
            return null;
        }
    });
};
exports.toAst = toAst;
