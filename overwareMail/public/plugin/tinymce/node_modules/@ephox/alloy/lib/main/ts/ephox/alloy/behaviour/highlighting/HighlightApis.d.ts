import { Option } from '@ephox/katamari';
declare const dehighlightAll: (component: any, hConfig: any, hState: any) => void;
declare const dehighlight: (component: any, hConfig: any, hState: any, target: any) => void;
declare const highlight: (component: any, hConfig: any, hState: any, target: any) => void;
declare const highlightFirst: (component: any, hConfig: any, hState: any) => void;
declare const highlightLast: (component: any, hConfig: any, hState: any) => void;
declare const highlightAt: (component: any, hConfig: any, hState: any, index: any) => void;
declare const highlightBy: (component: any, hConfig: any, hState: any, predicate: any) => void;
declare const isHighlighted: (component: any, hConfig: any, hState: any, queryTarget: any) => any;
declare const getHighlighted: (component: any, hConfig: any, hState: any) => any;
declare const getFirst: (component: any, hConfig: any, hState: any) => any;
declare const getLast: (component: any, hConfig: any, hState: any) => Option<{}>;
declare const getPrevious: (component: any, hConfig: any, hState: any) => Option<{}>;
declare const getNext: (component: any, hConfig: any, hState: any) => Option<{}>;
export { dehighlightAll, dehighlight, highlight, highlightFirst, highlightLast, highlightAt, highlightBy, isHighlighted, getHighlighted, getFirst, getLast, getPrevious, getNext };
