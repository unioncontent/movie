import { FieldSchema } from '@ephox/boulder';
import { Fun } from '@ephox/katamari';
import * as Behaviour from '../../api/behaviour/Behaviour';
import { Replacing } from '../../api/behaviour/Replacing';
import * as SketchBehaviours from '../../api/component/SketchBehaviours';
import * as PartType from '../../parts/PartType';
var schema = Fun.constant([
    FieldSchema.defaulted('shell', true),
    SketchBehaviours.field('toolbarBehaviours', [Replacing])
]);
// TODO: Dupe with Toolbar
var enhanceGroups = function (detail) {
    return {
        behaviours: Behaviour.derive([
            Replacing.config({})
        ])
    };
};
var parts = Fun.constant([
    // Note, is the container for putting all the groups in, not a group itself.
    PartType.optional({
        name: 'groups',
        overrides: enhanceGroups
    })
]);
var name = Fun.constant('Toolbar');
export { name, schema, parts };
//# sourceMappingURL=ToolbarSchema.js.map