import { Option } from '@ephox/katamari';
import { AdtInterface, PositionCoordinates } from '../../alien/TypeDefinitions';
export declare type DragCoords = (x: number | Option<number>, y: number | Option<number>) => CoordAdt;
export interface CoordAdt extends AdtInterface {
}
export interface StylesCoord {
    left: string;
    top: string;
    position: string;
}
declare const asFixed: (coord: CoordAdt, scroll: PositionCoordinates, origin: PositionCoordinates) => PositionCoordinates;
declare const asAbsolute: (coord: CoordAdt, scroll: PositionCoordinates, origin: PositionCoordinates) => PositionCoordinates;
declare const asOffset: (coord: CoordAdt, scroll: PositionCoordinates, origin: PositionCoordinates) => PositionCoordinates;
declare const toString: (coord: any) => any;
declare const withinRange: (coord1: CoordAdt, coord2: CoordAdt, xRange: number, yRange: number, scroll: PositionCoordinates, origin: PositionCoordinates) => boolean;
declare const toStyles: (coord: CoordAdt, scroll: PositionCoordinates, origin: PositionCoordinates) => StylesCoord;
declare const translate: (coord: CoordAdt, deltaX: any, deltaY: any) => any;
declare const absorb: (partialCoord: any, originalCoord: any, scroll: PositionCoordinates, origin: PositionCoordinates) => any;
declare const offset: DragCoords;
declare const absolute: DragCoords;
declare const fixed: DragCoords;
export { offset, absolute, fixed, asFixed, asAbsolute, asOffset, withinRange, toStyles, translate, absorb, toString };
