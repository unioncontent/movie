import { DslType } from '@ephox/boulder';
import { AlloyComponentsSpec, RawDomSchema, AlloyMixedSpec } from '../api/ui/Sketcher';
import { EventHandlerConfig } from '../api/events/AlloyEvents';
import { AdtInterface } from '../alien/TypeDefinitions';
export interface SpecSchemaStruct {
    components: () => AlloyComponentsSpec;
    containerBehaviours: () => ContainerBehaviours;
    dom: () => RawDomSchema;
    domModification: () => {};
    eventOrder: () => EventHandlerConfig;
    events: () => EventHandlerConfig;
    originalSpec: () => AlloyMixedSpec;
    uid: () => string;
    'debug.sketcher': () => {};
}
export interface ContainerBehaviours {
    dump: () => {};
    [key: string]: any;
}
declare const getPartsSchema: (partNames: any, _optPartNames: any, _owner: any) => DslType.FieldProcessorAdt[];
declare const asRawOrDie: (label: any, schema: any, spec: any, partSchemas: any, partUidsSchemas: any) => any;
declare const asStructOrDie: (label: string, schema: AdtInterface[], spec: AlloyMixedSpec, partSchemas: any[], partUidsSchemas: any[]) => SpecSchemaStruct;
declare const extend: (builder: any, original: any, nu: any) => any;
declare const addBehaviours: (original: any, behaviours: any) => any;
export { asRawOrDie, asStructOrDie, addBehaviours, getPartsSchema, extend };
