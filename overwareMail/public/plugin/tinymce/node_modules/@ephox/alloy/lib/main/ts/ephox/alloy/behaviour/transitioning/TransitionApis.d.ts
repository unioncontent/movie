import { Option } from '@ephox/katamari';
import { AlloyComponent } from '../../api/component/ComponentApi';
export interface TransitionRoute {
    destination: () => string;
    start: () => string;
}
export interface TransStateConfig {
    readState: () => string;
}
declare const findRoute: <T>(component: AlloyComponent, transConfig: any, transState: TransStateConfig, route: TransitionRoute) => Option<any>;
declare const disableTransition: (comp: AlloyComponent, transConfig: any, transState: TransStateConfig) => void;
declare const getCurrentRoute: (comp: AlloyComponent, transConfig: any, transState: TransStateConfig) => Option<any>;
declare const jumpTo: (comp: AlloyComponent, transConfig: any, transState: TransStateConfig, destination: string) => void;
declare const progressTo: (comp: AlloyComponent, transConfig: any, transState: TransStateConfig, destination: string) => void;
declare const getState: (comp: AlloyComponent, transConfig: any, transState: TransStateConfig) => Option<any>;
export { findRoute, disableTransition, getCurrentRoute, jumpTo, progressTo, getState };
