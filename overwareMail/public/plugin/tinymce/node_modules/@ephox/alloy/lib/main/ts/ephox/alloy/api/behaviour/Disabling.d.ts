import * as Behaviour from './Behaviour';
export interface DisableBehaviour extends Behaviour.AlloyBehaviour {
    config: <T>(config: DisablingConfig<T>) => {
        [key: string]: (any) => any;
    };
    enable: (component, disableConfig?, disableState?) => void;
    disable: (component, disableConfig?, disableState?) => void;
    isDisabled: (component) => boolean;
    onLoad: (component, disableConfig, disableState) => void;
}
export interface DisablingConfig<T> {
    active?: {
        exhibit: (base: {}, disableConfig: {
            DisableConfig;
        }, disableState?) => any;
        events: (disableConfig, disableState) => any;
    };
    disabled: boolean;
    disableClass?: string;
}
export interface DisableConfig {
    disabled: () => boolean;
    disableClass?: () => string;
}
declare const Disabling: DisableBehaviour;
export { Disabling };
