import { FieldSchema } from '@ephox/boulder';
import { Fun } from '@ephox/katamari';
import { Coupling } from '../../api/behaviour/Coupling';
import { Focusing } from '../../api/behaviour/Focusing';
import { Keying } from '../../api/behaviour/Keying';
import { Toggling } from '../../api/behaviour/Toggling';
import * as SketchBehaviours from '../../api/component/SketchBehaviours';
import * as Fields from '../../data/Fields';
import * as InternalSink from '../../parts/InternalSink';
import * as PartType from '../../parts/PartType';
var schema = Fun.constant([
    FieldSchema.strict('dom'),
    FieldSchema.strict('fetch'),
    Fields.onHandler('onOpen'),
    Fields.onKeyboardHandler('onExecute'),
    SketchBehaviours.field('dropdownBehaviours', [Toggling, Coupling, Keying, Focusing]),
    FieldSchema.strict('toggleClass'),
    FieldSchema.defaulted('displayer', Fun.identity),
    FieldSchema.option('lazySink'),
    FieldSchema.defaulted('matchWidth', false),
    FieldSchema.option('role')
]);
var parts = Fun.constant([
    PartType.external({
        schema: [
            Fields.tieredMenuMarkers()
        ],
        name: 'menu',
        defaults: function (detail) {
            return {
                onExecute: detail.onExecute()
            };
        }
    }),
    InternalSink.partType()
]);
var name = Fun.constant('Dropdown');
export default {
    name: name,
    schema: schema,
    parts: parts
};
//# sourceMappingURL=DropdownSchema.js.map