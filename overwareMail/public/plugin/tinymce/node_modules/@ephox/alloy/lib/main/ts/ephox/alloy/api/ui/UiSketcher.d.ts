import { AdtInterface } from '../../alien/TypeDefinitions';
import { RawDomSchema, RawDomSchemaUid, SketchSpec } from '../../api/ui/Sketcher';
import * as SpecSchema from '../../spec/SpecSchema';
export declare type SingleFactory = (detail: SpecSchema.SpecSchemaStruct, specWithUid: RawDomSchemaUid) => SketchSpec;
export declare type CompositeFactory = (detail: SpecSchema.SpecSchemaStruct, components: SketchSpec[], spec: RawDomSchemaUid, _externals?: any) => SketchSpec;
declare const single: (owner: string, schema: AdtInterface[], factory: SingleFactory, spec: RawDomSchema) => SketchSpec;
declare const composite: (owner: string, schema: AdtInterface[], partTypes: AdtInterface[], factory: CompositeFactory, spec: RawDomSchema) => SketchSpec;
declare const supplyUid: (spec: RawDomSchema) => RawDomSchemaUid;
export { supplyUid, single, composite };
